const int n = 10;                         // 常量声明（包含了常量定义），作为模块的开始
const float m = 0.0;                      // 单精度浮点型和整型作为基本类型
int array[2][3] = {{0, 1, 2}, {3, 4, 5}}; // 定义数组，各维度必须定义清楚，初始值和数组结构要求相同
int x;                                    // 未初始化的全局变量，会被初始化为0
int factorial(int n)                      // 函数返回类型为int（基本类型之一），形参列表，全局变量和局部变量的作用域重合时，重叠部分局部变量优先，创建语句块的定义
{
    if (n == 0) // 条件表达式，函数内每个分支都必须含有return语句
        return 1;
    else
        return n * factorial(n - 1);
}

float fib()
{
    int factorial = 5.0; // 变量名和函数名可以相同（需要作用域不重合），定义变量并使用初始值初始化
    int a = 0;
    int b = 1;
    int c = 0;
    for (int i = 0; i < n; i++)
    {
        c = a + b; // 左值可以为变量，也可以为数组元素
        a = b;
        b = c;
    }
    return c;
}

int main()
{
    if ((5 + 3) <= 7 || !1 || 3 * (1 + 2) != 10) // 单目运算符，条件表达式，相等性表达式，关系表达式，乘除模表达式，加减表达式，逻辑或表达式
    {
        fib();
    }
    // factorial(5);    // 两种注释类型
    /*fib();*/
    return factorial(5); // 函数调用，实参传递
}
