
;; Function main (main, funcdef_no=1731, decl_uid=44210, cgraph_uid=465, symbol_order=495)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 9:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 14:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 32:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 54:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 58:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 6
   Insn 82: point = 0, n_alt = 0
  BB 7
   Insn 86: point = 0, n_alt = -1
   Insn 85: point = 0, n_alt = -2
  BB 5
   Insn 81: point = 2, n_alt = -1
   Insn 80: point = 2, n_alt = 0
   Insn 76: point = 4, n_alt = -2
   Insn 73: point = 6, n_alt = 0
  BB 4
   Insn 71: point = 7, n_alt = -1
   Insn 70: point = 7, n_alt = 0
   Insn 68: point = 8, n_alt = 0
  BB 2
   Insn 90: point = 9, n_alt = -1
   Insn 44: point = 9, n_alt = 0
   Insn 43: point = 9, n_alt = -2
   Insn 42: point = 10, n_alt = -2
   Insn 41: point = 11, n_alt = -2
   Insn 40: point = 13, n_alt = 3
   Insn 39: point = 14, n_alt = -2
   Insn 38: point = 15, n_alt = 0
   Insn 37: point = 15, n_alt = -2
   Insn 36: point = 16, n_alt = 0
   Insn 35: point = 16, n_alt = -2
   Insn 34: point = 17, n_alt = 0
   Insn 33: point = 17, n_alt = -2
   Insn 32: point = 18, n_alt = 4
   Insn 31: point = 19, n_alt = -2
   Insn 30: point = 20, n_alt = 4
   Insn 29: point = 21, n_alt = 0
   Insn 28: point = 21, n_alt = -2
   Insn 27: point = 22, n_alt = -2
   Insn 26: point = 23, n_alt = -2
   Insn 25: point = 25, n_alt = 3
   Insn 24: point = 26, n_alt = -2
   Insn 23: point = 27, n_alt = 0
   Insn 22: point = 27, n_alt = -2
   Insn 21: point = 28, n_alt = -2
   Insn 20: point = 29, n_alt = 0
   Insn 19: point = 30, n_alt = -2
   Insn 18: point = 31, n_alt = 0
   Insn 17: point = 31, n_alt = -2
   Insn 16: point = 32, n_alt = 4
   Insn 15: point = 33, n_alt = -2
   Insn 14: point = 34, n_alt = 4
   Insn 13: point = 35, n_alt = 0
   Insn 12: point = 35, n_alt = -2
   Insn 11: point = 36, n_alt = 4
   Insn 10: point = 37, n_alt = -2
   Insn 9: point = 38, n_alt = 3
   Insn 8: point = 39, n_alt = 1
   Insn 7: point = 39, n_alt = 1
   Insn 6: point = 39, n_alt = 1
   Insn 3: point = 39, n_alt = 0
  BB 3
   Insn 65: point = 41, n_alt = 0
   Insn 64: point = 41, n_alt = 1
   Insn 63: point = 42, n_alt = 0
   Insn 62: point = 43, n_alt = 0
   Insn 61: point = 43, n_alt = -2
   Insn 60: point = 44, n_alt = -2
   Insn 59: point = 45, n_alt = -2
   Insn 58: point = 47, n_alt = 3
   Insn 57: point = 48, n_alt = -2
   Insn 56: point = 49, n_alt = 0
   Insn 55: point = 49, n_alt = -2
   Insn 54: point = 50, n_alt = 4
   Insn 53: point = 51, n_alt = -2
   Insn 52: point = 52, n_alt = 0
   Insn 51: point = 53, n_alt = 0
   Insn 50: point = 54, n_alt = 0
   Insn 49: point = 55, n_alt = 1
   Insn 48: point = 56, n_alt = 0
 r82: [27..30]
 r83: [21..26]
 r84: [15..16]
 r85: [9..14]
 r86: [43..48]
 r87: [7..8]
 r88: [5..6]
 r89: [0..4]
 r90: [37..38]
 r91: [35..36]
 r92: [33..34]
 r93: [31..32]
 r94: [28..29]
 r95: [22..23]
 r96: [24..25]
 r97: [19..20]
 r98: [17..18]
 r99: [10..11]
 r100: [12..13]
 r101: [55..56]
 r102: [53..54]
 r103: [51..52]
 r104: [49..50]
 r105: [44..45]
 r106: [46..47]
 r107: [41..42]
 r109: [39..40]
 r110: [2..3]
Compressing live ranges: from 57 to 46 - 80%
Ranges after the compression:
 r82: [20..21]
 r83: [16..19]
 r84: [10..11]
 r85: [6..9]
 r86: [34..37]
 r87: [4..5]
 r88: [2..3]
 r89: [0..1]
 r90: [28..29]
 r91: [26..27]
 r92: [24..25]
 r93: [22..23]
 r94: [20..21]
 r95: [16..17]
 r96: [18..19]
 r97: [14..15]
 r98: [12..13]
 r99: [6..7]
 r100: [8..9]
 r101: [44..45]
 r102: [42..43]
 r103: [40..41]
 r104: [38..39]
 r105: [34..35]
 r106: [36..37]
 r107: [32..33]
 r109: [30..31]
 r110: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 19
changing reg in insn 22
changing reg in insn 24
changing reg in insn 28
changing reg in insn 35
changing reg in insn 37
changing reg in insn 39
changing reg in insn 43
changing reg in insn 57
changing reg in insn 61
changing reg in insn 68
changing reg in insn 70
changing reg in insn 73
changing reg in insn 76
changing reg in insn 76
changing reg in insn 85
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 20
changing reg in insn 21
changing reg in insn 26
changing reg in insn 27
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 41
changing reg in insn 42
changing reg in insn 40
changing reg in insn 41
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 59
changing reg in insn 60
changing reg in insn 58
changing reg in insn 59
changing reg in insn 63
changing reg in insn 64
changing reg in insn 3
changing reg in insn 80
deleting insn with uid = 24.
deleting insn with uid = 26.
deleting insn with uid = 35.
deleting insn with uid = 39.
deleting insn with uid = 41.
deleting insn with uid = 57.
deleting insn with uid = 59.
deleting insn with uid = 76.
deleting insn with uid = 85.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 82.


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={26d,20u} r1={16d,4u} r2={11d} r4={20d,9u} r5={20d,9u} r6={1d,26u} r7={1d,17u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={16d,2u} r18={10d} r19={1d,1u} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={11d} r37={11d} r38={10d} r39={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} 
;;    total ref usage 820{732d,88u,0e} in 60{50 regular + 10 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.49147+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [109])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":7:1 1159 {stack_protect_set_1_di}
     (nil))
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [6 a+0 S4 A64])
        (const_int 0 [0])) "../fib.cpp":10:4 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])
        (const_int 1 [0x1])) "../fib.cpp":11:4 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A64])
        (const_int 1 [0x1])) "../fib.cpp":12:4 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 0 ax [90])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":13:9 210 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [90])) "../fib.cpp":13:9 74 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 0 ax [91])
        (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f926bc713f0 cin>)) "../fib.cpp":13:9 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [91])) "../fib.cpp":13:9 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f926bc713f0 cin>)
        (nil)))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f926bb44f00 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) "../fib.cpp":13:9 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 0 ax [92])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f926b4f56c0 *.LC0>)) "../fib.cpp":15:10 74 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [92])) "../fib.cpp":15:10 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f926b4f56c0 *.LC0>)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 0 ax [93])
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)) "../fib.cpp":15:10 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "../fib.cpp":15:10 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7f926bae4700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":15:10 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 1 dx [orig:82 _1 ] [82])
        (reg:DI 0 ax)) "../fib.cpp":15:10 74 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 0 ax [94])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [6 a+0 S4 A64])) "../fib.cpp":15:18 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg:SI 0 ax [94])) "../fib.cpp":15:18 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:82 _1 ] [82])) "../fib.cpp":15:18 74 {*movdi_internal}
     (nil))
(call_insn 23 22 25 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f926bacd600 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":15:18 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 25 23 27 2 (set (reg:DI 1 dx [96])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "../fib.cpp":15:23 74 {*movdi_internal}
     (nil))
(insn 27 25 28 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [95])) "../fib.cpp":15:23 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "../fib.cpp":15:23 74 {*movdi_internal}
     (nil))
(call_insn 29 28 30 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f926bab8400 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":15:23 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 2 (set (reg:DI 0 ax [97])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f926b4f5750 *.LC1>)) "../fib.cpp":19:10 74 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [97])) "../fib.cpp":19:10 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f926b4f5750 *.LC1>)
        (nil)))
(insn 32 31 33 2 (set (reg:DI 0 ax [98])
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)) "../fib.cpp":19:10 74 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [98])) "../fib.cpp":19:10 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)
        (nil)))
(call_insn 34 33 36 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7f926bae4700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":19:10 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 36 34 37 2 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "../fib.cpp":19:18 75 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:84 _3 ] [84])) "../fib.cpp":19:18 74 {*movdi_internal}
     (nil))
(call_insn 38 37 40 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f926bacd600 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":19:18 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 40 38 42 2 (set (reg:DI 1 dx [100])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "../fib.cpp":19:23 74 {*movdi_internal}
     (nil))
(insn 42 40 43 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [99])) "../fib.cpp":19:23 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:85 _4 ] [85])) "../fib.cpp":19:23 74 {*movdi_internal}
     (nil))
(call_insn 44 43 90 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f926bab8400 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":19:23 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 90 44 91 2 (set (pc)
        (label_ref 66)) "../fib.cpp":20:2 807 {jump}
     (nil)
 -> 66)
(barrier 91 90 69)
(code_label 69 91 47 3 3 (nil) [1 uses])
(note 47 69 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 3 (set (reg:SI 0 ax [101])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])) "../fib.cpp":22:5 75 {*movsi_internal}
     (nil))
(insn 49 48 50 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [6 t+0 S4 A32])
        (reg:SI 0 ax [101])) "../fib.cpp":22:5 75 {*movsi_internal}
     (nil))
(insn 50 49 51 3 (set (reg:SI 0 ax [102])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [6 a+0 S4 A64])) "../fib.cpp":23:5 75 {*movsi_internal}
     (nil))
(insn 51 50 52 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])
                    (reg:SI 0 ax [102])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":23:5 209 {*addsi_1}
     (nil))
(insn 52 51 53 3 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])) "../fib.cpp":24:11 75 {*movsi_internal}
     (nil))
(insn 53 52 54 3 (set (reg:SI 4 si)
        (reg:SI 0 ax [103])) "../fib.cpp":24:11 75 {*movsi_internal}
     (nil))
(insn 54 53 55 3 (set (reg:DI 0 ax [104])
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)) "../fib.cpp":24:11 74 {*movdi_internal}
     (nil))
(insn 55 54 56 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [104])) "../fib.cpp":24:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)
        (nil)))
(call_insn 56 55 58 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f926bacd600 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":24:11 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 58 56 60 3 (set (reg:DI 1 dx [106])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "../fib.cpp":24:16 74 {*movdi_internal}
     (nil))
(insn 60 58 61 3 (set (reg:DI 4 si)
        (reg:DI 1 dx [105])) "../fib.cpp":24:16 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
        (nil)))
(insn 61 60 62 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:86 _5 ] [86])) "../fib.cpp":24:16 74 {*movdi_internal}
     (nil))
(call_insn 62 61 63 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f926bab8400 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":24:16 824 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 3 (set (reg:SI 0 ax [107])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [6 t+0 S4 A32])) "../fib.cpp":25:5 75 {*movsi_internal}
     (nil))
(insn 64 63 65 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [6 a+0 S4 A64])
        (reg:SI 0 ax [107])) "../fib.cpp":25:5 75 {*movsi_internal}
     (nil))
(insn 65 64 66 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":26:5 209 {*addsi_1}
     (nil))
(code_label 66 65 67 4 2 (nil) [1 uses])
(note 67 66 68 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 70 4 (set (reg:SI 0 ax [orig:87 n.0_6 ] [87])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [6 n+0 S4 A32])) "../fib.cpp":20:11 75 {*movsi_internal}
     (nil))
(insn 70 68 71 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A64])
            (reg:SI 0 ax [orig:87 n.0_6 ] [87]))) "../fib.cpp":20:11 11 {*cmpsi_1}
     (nil))
(jump_insn 71 70 72 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "../fib.cpp":20:11 806 {*jcc}
     (nil)
 -> 69)
(note 72 71 73 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 80 5 (set (reg:SI 0 ax [orig:88 _28 ] [88])
        (const_int 0 [0])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(insn 80 73 81 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.49147+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 1 dx [110]))
        ]) "../fib.cpp":28:1 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 81 80 88 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "../fib.cpp":28:1 806 {*jcc}
     (nil)
 -> 84)
(note 88 81 82 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 82 88 83 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f926b52cb00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "../fib.cpp":28:1 813 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 83 82 84)
(code_label 84 83 89 7 5 (nil) [1 uses])
(note 89 84 86 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 86 89 92 7 (use (reg/i:SI 0 ax)) "../fib.cpp":28:1 -1
     (nil))
(note 92 86 0 NOTE_INSN_DELETED)

;; Function __static_initialization_and_destruction_0 (_Z41__static_initialization_and_destruction_0ii, funcdef_no=2234, decl_uid=49121, cgraph_uid=968, symbol_order=1025)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 13:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4
EBB 6
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 29: point = 0, n_alt = -1
  BB 4
   Insn 23: point = 0, n_alt = 0
   Insn 22: point = 0, n_alt = -2
   Insn 21: point = 1, n_alt = -2
   Insn 20: point = 3, n_alt = 3
   Insn 19: point = 4, n_alt = -2
   Insn 18: point = 5, n_alt = 4
   Insn 17: point = 6, n_alt = -2
   Insn 16: point = 7, n_alt = 4
   Insn 15: point = 8, n_alt = 0
   Insn 14: point = 8, n_alt = -2
   Insn 13: point = 9, n_alt = 4
  BB 3
   Insn 11: point = 10, n_alt = -1
   Insn 10: point = 10, n_alt = 0
  BB 2
   Insn 8: point = 10, n_alt = -1
   Insn 7: point = 10, n_alt = 0
   Insn 3: point = 10, n_alt = 1
   Insn 2: point = 10, n_alt = 1
 r82: [8..9]
 r83: [6..7]
 r84: [4..5]
 r85: [0..1]
 r86: [2..3]
Compressing live ranges: from 10 to 10 - 100%
Ranges after the compression:
 r82: [8..9]
 r83: [6..7]
 r84: [4..5]
 r85: [0..1]
 r86: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 22
changing reg in insn 20
changing reg in insn 21
deleting insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns


__static_initialization_and_destruction_0

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,10u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d,2u} r18={2d} r19={1d,1u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 193{162d,31u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [6 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [6 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [6 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) "../fib.cpp":28:1 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 30)
            (pc))) "../fib.cpp":28:1 806 {*jcc}
     (nil)
 -> 30)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [6 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) "../fib.cpp":28:1 11 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 30)
            (pc))) "../fib.cpp":28:1 806 {*jcc}
     (nil)
 -> 30)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 0 ax [82])
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f926bc71ab0 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f926bc71ab0 __ioinit>)
        (nil)))
(call_insn 15 14 16 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f926bf30100 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/iostream":74:25 813 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 4 (set (reg:DI 0 ax [83])
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f926b865240 __dso_handle>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 1 dx)
        (reg:DI 0 ax [83])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f926b865240 __dso_handle>)
        (nil)))
(insn 18 17 19 4 (set (reg:DI 0 ax [84])
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f926bc71ab0 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 4 si)
        (reg:DI 0 ax [84])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f926bc71ab0 __ioinit>)
        (nil)))
(insn 20 19 22 4 (set (reg:DI 0 ax [86])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f926bf30300 __dt_comp >)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 22 20 23 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [85])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f926bf30300 __dt_comp >)
        (nil)))
(call_insn 23 22 30 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f926b484200 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/iostream":74:25 824 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(code_label 30 23 28 6 8 (nil) [2 uses])
(note 28 30 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 26 6 (const_int 0 [0]) "../fib.cpp":28:1 843 {nop}
     (nil))
(code_label 26 29 27 5 6 (nil) [0 uses])
(note 27 26 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 31 27 0 NOTE_INSN_DELETED)

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2235, decl_uid=49127, cgraph_uid=969, symbol_order=1144)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d,1u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 95{87d,8u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(call_insn 7 6 10 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f926b484000 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) "../fib.cpp":28:1 813 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(note 10 7 0 NOTE_INSN_DELETED)
