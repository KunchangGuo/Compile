
;; Function main (main, funcdef_no=1731, decl_uid=44210, cgraph_uid=465, symbol_order=495)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 8 count 8 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 6 }
;; 6 succs { }
;; 7 succs { 1 }
Removing SCRATCH to p109 in insn #3 (nop 2)
rescanning insn with uid = 3.
Removing SCRATCH to p110 in insn #80 (nop 3)
rescanning insn with uid = 80.
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 82.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 8 count 8 (    1)

Pass 0 for finding pseudo/allocno costs

    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r103,l0) best SIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r95,l0) best SIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r92,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r82,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r86,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:1000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a6(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a7(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a8(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a9(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:24000 INT_SSE_REGS:24000 ALL_REGS:212000 MEM:12000
  a11(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r85,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:1000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a13(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a14(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a15(r84,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:1000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a16(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a17(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a18(r83,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:1000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a19(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a20(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a21(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:1000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a22(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a23(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a24(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a25(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a26(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a27(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000

   Insn 86(l0): point = 0
   Insn 85(l0): point = 2
   Insn 82(l0): point = 5
   Insn 81(l0): point = 8
   Insn 80(l0): point = 10
   Insn 76(l0): point = 12
   Insn 73(l0): point = 14
   Insn 65(l0): point = 17
   Insn 64(l0): point = 19
   Insn 63(l0): point = 21
   Insn 62(l0): point = 23
   Insn 61(l0): point = 25
   Insn 60(l0): point = 27
   Insn 59(l0): point = 29
   Insn 58(l0): point = 31
   Insn 57(l0): point = 33
   Insn 56(l0): point = 35
   Insn 55(l0): point = 37
   Insn 54(l0): point = 39
   Insn 53(l0): point = 41
   Insn 52(l0): point = 43
   Insn 51(l0): point = 45
   Insn 50(l0): point = 47
   Insn 49(l0): point = 49
   Insn 48(l0): point = 51
   Insn 71(l0): point = 54
   Insn 70(l0): point = 56
   Insn 68(l0): point = 58
   Insn 90(l0): point = 61
   Insn 44(l0): point = 63
   Insn 43(l0): point = 65
   Insn 42(l0): point = 67
   Insn 41(l0): point = 69
   Insn 40(l0): point = 71
   Insn 39(l0): point = 73
   Insn 38(l0): point = 75
   Insn 37(l0): point = 77
   Insn 36(l0): point = 79
   Insn 35(l0): point = 81
   Insn 34(l0): point = 83
   Insn 33(l0): point = 85
   Insn 32(l0): point = 87
   Insn 31(l0): point = 89
   Insn 30(l0): point = 91
   Insn 29(l0): point = 93
   Insn 28(l0): point = 95
   Insn 27(l0): point = 97
   Insn 26(l0): point = 99
   Insn 25(l0): point = 101
   Insn 24(l0): point = 103
   Insn 23(l0): point = 105
   Insn 22(l0): point = 107
   Insn 21(l0): point = 109
   Insn 20(l0): point = 111
   Insn 19(l0): point = 113
   Insn 18(l0): point = 115
   Insn 17(l0): point = 117
   Insn 16(l0): point = 119
   Insn 15(l0): point = 121
   Insn 14(l0): point = 123
   Insn 13(l0): point = 125
   Insn 12(l0): point = 127
   Insn 11(l0): point = 129
   Insn 10(l0): point = 131
   Insn 9(l0): point = 133
   Insn 8(l0): point = 135
   Insn 7(l0): point = 137
   Insn 6(l0): point = 139
   Insn 3(l0): point = 141
 a0(r89): [8..12] [3..4]
 a1(r110): [10..10]
 a2(r88): [13..14]
 a3(r87): [57..58]
 a4(r107): [20..21]
 a5(r86): [26..33]
 a6(r105): [28..29]
 a7(r106): [30..31]
 a8(r104): [38..39]
 a9(r103): [42..43]
 a10(r102): [46..47]
 a11(r101): [50..51]
 a12(r85): [66..73]
 a13(r99): [68..69]
 a14(r100): [70..71]
 a15(r84): [78..81]
 a16(r98): [86..87]
 a17(r97): [90..91]
 a18(r83): [96..103]
 a19(r95): [98..99]
 a20(r96): [100..101]
 a21(r82): [108..113]
 a22(r94): [110..111]
 a23(r93): [118..119]
 a24(r92): [122..123]
 a25(r91): [128..129]
 a26(r90): [132..133]
 a27(r109): [141..141]
Compressing live ranges: from 144 to 48 - 33%
Ranges after the compression:
 a0(r89): [0..4]
 a1(r110): [3..3]
 a2(r88): [5..6]
 a3(r87): [21..22]
 a4(r107): [7..8]
 a5(r86): [9..12]
 a6(r105): [9..10]
 a7(r106): [11..12]
 a8(r104): [13..14]
 a9(r103): [15..16]
 a10(r102): [17..18]
 a11(r101): [19..20]
 a12(r85): [23..26]
 a13(r99): [23..24]
 a14(r100): [25..26]
 a15(r84): [27..28]
 a16(r98): [29..30]
 a17(r97): [31..32]
 a18(r83): [33..36]
 a19(r95): [33..34]
 a20(r96): [35..36]
 a21(r82): [37..38]
 a22(r94): [37..38]
 a23(r93): [39..40]
 a24(r92): [41..42]
 a25(r91): [43..44]
 a26(r90): [45..46]
 a27(r109): [47..47]
  pref0:a6(r105)<-hr4@1500
  pref1:a8(r104)<-hr5@1500
  pref2:a9(r103)<-hr4@1500
  pref3:a13(r99)<-hr4@1500
  pref4:a16(r98)<-hr5@1500
  pref5:a17(r97)<-hr4@1500
  pref6:a19(r95)<-hr4@1500
  pref7:a22(r94)<-hr4@1500
  pref8:a23(r93)<-hr5@1500
  pref9:a24(r92)<-hr4@1500
  pref10:a25(r91)<-hr5@1500
  pref11:a26(r90)<-hr4@1500
  pref12:a0(r89)<-hr0@1500
  pref13:a5(r86)<-hr0@1500
  pref14:a12(r85)<-hr0@1500
  pref15:a15(r84)<-hr0@1500
  pref16:a18(r83)<-hr0@1500
  pref17:a21(r82)<-hr0@1500
  regions=1, blocks=8, points=48
    allocnos=28 (big 0), copies=0, conflicts=0, ranges=28
Disposition:
   21:r82  l0     1   18:r83  l0     0   15:r84  l0     0   12:r85  l0     0
    5:r86  l0     0    3:r87  l0     0    2:r88  l0     0    0:r89  l0     0
   26:r90  l0     0   25:r91  l0     0   24:r92  l0     0   23:r93  l0     0
   22:r94  l0     0   19:r95  l0     1   20:r96  l0     1   17:r97  l0     0
   16:r98  l0     0   13:r99  l0     1   14:r100 l0     1   11:r101 l0     0
   10:r102 l0     0    9:r103 l0     0    8:r104 l0     0    6:r105 l0     1
    7:r106 l0     1    4:r107 l0     0   27:r109 l0     0    1:r110 l0     1
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={12d,7u} r1={11d} r2={11d} r4={20d,9u} r5={20d,9u} r6={1d,7u} r7={1d,17u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,6u} r17={16d,2u} r18={10d} r19={1d,26u} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={11d} r37={11d} r38={10d} r39={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r109={1d} r110={1d} 
;;    total ref usage 851{742d,109u,0e} in 69{59 regular + 10 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.49147+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 109)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":7:1 1159 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [6 a+0 S4 A64])
        (const_int 0 [0])) "../fib.cpp":10:4 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])
        (const_int 1 [0x1])) "../fib.cpp":11:4 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A64])
        (const_int 1 [0x1])) "../fib.cpp":12:4 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":13:9 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 90)) "../fib.cpp":13:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 91)
        (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f926bc713f0 cin>)) "../fib.cpp":13:9 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 91)) "../fib.cpp":13:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f926bc713f0 cin>)
            (nil))))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f926bb44f00 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) "../fib.cpp":13:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 92)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f926b4f56c0 *.LC0>)) "../fib.cpp":15:10 74 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 92)) "../fib.cpp":15:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f926b4f56c0 *.LC0>)
            (nil))))
(insn 16 15 17 2 (set (reg:DI 93)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)) "../fib.cpp":15:10 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 93)) "../fib.cpp":15:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)
            (nil))))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7f926bae4700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":15:10 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 82 [ _1 ])
        (reg:DI 0 ax)) "../fib.cpp":15:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [6 a+0 S4 A64])) "../fib.cpp":15:18 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg:SI 94)) "../fib.cpp":15:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "../fib.cpp":15:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f926bacd600 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":15:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 24 23 25 2 (set (reg/f:DI 83 [ _2 ])
        (reg:DI 0 ax)) "../fib.cpp":15:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 25 24 26 2 (set (reg:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "../fib.cpp":15:23 74 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 95)
        (reg:DI 96)) "../fib.cpp":15:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg:DI 95)) "../fib.cpp":15:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
            (nil))))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "../fib.cpp":15:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 29 28 30 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f926bab8400 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":15:23 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 2 (set (reg:DI 97)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f926b4f5750 *.LC1>)) "../fib.cpp":19:10 74 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 97)) "../fib.cpp":19:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f926b4f5750 *.LC1>)
            (nil))))
(insn 32 31 33 2 (set (reg:DI 98)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)) "../fib.cpp":19:10 74 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (reg:DI 98)) "../fib.cpp":19:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)
            (nil))))
(call_insn 34 33 35 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7f926bae4700 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":19:10 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 35 34 36 2 (set (reg/f:DI 84 [ _3 ])
        (reg:DI 0 ax)) "../fib.cpp":19:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 36 35 37 2 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "../fib.cpp":19:18 75 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _3 ])) "../fib.cpp":19:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(call_insn 38 37 39 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f926bacd600 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":19:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 39 38 40 2 (set (reg/f:DI 85 [ _4 ])
        (reg:DI 0 ax)) "../fib.cpp":19:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 40 39 41 2 (set (reg:DI 100)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "../fib.cpp":19:23 74 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 99)
        (reg:DI 100)) "../fib.cpp":19:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 42 41 43 2 (set (reg:DI 4 si)
        (reg:DI 99)) "../fib.cpp":19:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
            (nil))))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "../fib.cpp":19:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(call_insn 44 43 90 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f926bab8400 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":19:23 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 90 44 91 2 (set (pc)
        (label_ref 66)) "../fib.cpp":20:2 807 {jump}
     (nil)
 -> 66)
(barrier 91 90 69)
(code_label 69 91 47 3 3 (nil) [1 uses])
(note 47 69 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 3 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])) "../fib.cpp":22:5 75 {*movsi_internal}
     (nil))
(insn 49 48 50 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 t+0 S4 A32])
        (reg:SI 101)) "../fib.cpp":22:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 50 49 51 3 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [6 a+0 S4 A64])) "../fib.cpp":23:5 75 {*movsi_internal}
     (nil))
(insn 51 50 52 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])
                    (reg:SI 102)))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":23:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 3 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [6 b+0 S4 A32])) "../fib.cpp":24:11 75 {*movsi_internal}
     (nil))
(insn 53 52 54 3 (set (reg:SI 4 si)
        (reg:SI 103)) "../fib.cpp":24:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(insn 54 53 55 3 (set (reg:DI 104)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)) "../fib.cpp":24:11 74 {*movdi_internal}
     (nil))
(insn 55 54 56 3 (set (reg:DI 5 di)
        (reg:DI 104)) "../fib.cpp":24:11 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f926bc71480 cout>)
            (nil))))
(call_insn 56 55 57 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f926bacd600 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":24:11 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 57 56 58 3 (set (reg/f:DI 86 [ _5 ])
        (reg:DI 0 ax)) "../fib.cpp":24:11 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 58 57 59 3 (set (reg:DI 106)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "../fib.cpp":24:16 74 {*movdi_internal}
     (nil))
(insn 59 58 60 3 (set (reg:DI 105)
        (reg:DI 106)) "../fib.cpp":24:16 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(insn 60 59 61 3 (set (reg:DI 4 si)
        (reg:DI 105)) "../fib.cpp":24:16 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f926bade700 endl>)
            (nil))))
(insn 61 60 62 3 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _5 ])) "../fib.cpp":24:16 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ _5 ])
        (nil)))
(call_insn 62 61 63 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f926bab8400 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":24:16 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 3 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 t+0 S4 A32])) "../fib.cpp":25:5 75 {*movsi_internal}
     (nil))
(insn 64 63 65 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [6 a+0 S4 A64])
        (reg:SI 107)) "../fib.cpp":25:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 65 64 66 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":26:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 66 65 67 4 2 (nil) [1 uses])
(note 67 66 68 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 70 4 (set (reg:SI 87 [ n.0_6 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [6 n+0 S4 A32])) "../fib.cpp":20:11 75 {*movsi_internal}
     (nil))
(insn 70 68 71 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A64])
            (reg:SI 87 [ n.0_6 ]))) "../fib.cpp":20:11 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ n.0_6 ])
        (nil)))
(jump_insn 71 70 72 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "../fib.cpp":20:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 69)
(note 72 71 73 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 76 5 (set (reg:SI 88 [ _28 ])
        (const_int 0 [0])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(insn 76 73 80 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _28 ])) "../fib.cpp":28:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _28 ])
        (nil)))
(insn 80 76 81 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.49147+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 110))
        ]) "../fib.cpp":28:1 1164 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 110)
        (nil)))
(jump_insn 81 80 88 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "../fib.cpp":28:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 84)
(note 88 81 82 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 82 88 83 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f926b52cb00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "../fib.cpp":28:1 813 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 83 82 84)
(code_label 84 83 89 7 5 (nil) [1 uses])
(note 89 84 85 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 85 89 86 7 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) "../fib.cpp":28:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ <retval> ])
        (nil)))
(insn 86 85 0 7 (use (reg/i:SI 0 ax)) "../fib.cpp":28:1 -1
     (nil))

;; Function __static_initialization_and_destruction_0 (_Z41__static_initialization_and_destruction_0ii, funcdef_no=2234, decl_uid=49121, cgraph_uid=968, symbol_order=1025)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 5
;; 2 succs { 3 6 }
;; 3 succs { 4 6 }
;; 4 succs { 6 }
;; 6 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best DREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a4(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 29(l0): point = 1
   Insn 23(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 11(l0): point = 27
   Insn 10(l0): point = 29
   Insn 8(l0): point = 32
   Insn 7(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r85): [7..8]
 a1(r86): [9..10]
 a2(r84): [13..14]
 a3(r83): [17..18]
 a4(r82): [23..24]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r86): [2..3]
 a2(r84): [4..5]
 a3(r83): [6..7]
 a4(r82): [8..9]
  pref0:a0(r85)<-hr5@1500
  pref1:a2(r84)<-hr4@1500
  pref2:a3(r83)<-hr1@1500
  pref3:a4(r82)<-hr5@1500
  regions=1, blocks=7, points=10
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    3:r83  l0     0    2:r84  l0     0    0:r85  l0     0
    1:r86  l0     0
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__static_initialization_and_destruction_0

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,6u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={4d,2u} r18={2d} r19={1d,10u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 206{164d,42u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) "../fib.cpp":28:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __initialize_p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) "../fib.cpp":28:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __priority ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [6 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) "../fib.cpp":28:1 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 30)
            (pc))) "../fib.cpp":28:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [6 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) "../fib.cpp":28:1 11 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 30)
            (pc))) "../fib.cpp":28:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 82)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f926bc71ab0 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg:DI 82)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f926bc71ab0 __ioinit>)
            (nil))))
(call_insn 15 14 16 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f926bf30100 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/iostream":74:25 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 4 (set (reg:DI 83)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f926b865240 __dso_handle>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 1 dx)
        (reg:DI 83)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f926b865240 __dso_handle>)
            (nil))))
(insn 18 17 19 4 (set (reg:DI 84)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f926bc71ab0 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 4 si)
        (reg:DI 84)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f926bc71ab0 __ioinit>)
            (nil))))
(insn 20 19 21 4 (set (reg:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f926bf30300 __dt_comp >)
                    ] UNSPEC_GOTPCREL)) [25  S8 A8])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:DI 85)
        (reg:DI 86)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg:DI 85)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f926bf30300 __dt_comp >)
            (nil))))
(call_insn 23 22 30 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f926b484200 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/iostream":74:25 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(code_label 30 23 28 6 8 (nil) [2 uses])
(note 28 30 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 26 6 (const_int 0 [0]) "../fib.cpp":28:1 843 {nop}
     (nil))
(code_label 26 29 27 5 6 (nil) [0 uses])
(note 27 26 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2235, decl_uid=49127, cgraph_uid=969, symbol_order=1144)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d,2u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{88d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f926b484000 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) "../fib.cpp":28:1 813 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
