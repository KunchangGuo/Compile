
;; Function std::ctype<char>::do_widen (_ZNKSt5ctypeIcE8do_widenEc, funcdef_no=1565, decl_uid=38061, cgraph_uid=536, symbol_order=565)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 87 uninteresting
Reg 84 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r87,l0) best SIREG, allocno SIREG
    a0 (r84,l0) best AREG, allocno AREG

  a0(r84,l0) costs: AREG:-1000,-1000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:7000,7000
  a1(r87,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:-1000,-1000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:7000,7000


Pass 1 for finding pseudo/allocno costs

    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000,-1000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:2000,2000 MEM:18000,18000
  a1(r87,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:2000,-1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:18000,18000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 4(l0): point = 4
   Insn 15(l0): point = 6
 a0(r84): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 9 to 4 - 44%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r87): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r84,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r87,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r84)<->a1(r87)@1000:move
  pref0:a1(r87)<-hr4@1500
  pref1:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=1, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r84 1r87
    modified regnos: 84 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@76000
      Allocno a0r84 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
        Forming thread by copy 0:a0r84-a1r87 (freq=1000):
          Result (freq=4000): a0r84(2000) a1r87(2000)
      Pushing a1(r87,l0)(cost 0)
      Pushing a0(r84,l0)(cost 0)
      Popping a0(r84,l0)  --         assign reg 0
      Popping a1(r87,l0)  --         assign reg 4
Disposition:
    0:r84  l0     0    1:r87  l0     4
New iteration of spill/restore move
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::ctype<char>::do_widen

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r84={1d,1u} r87={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 15 6 3 2 (set (reg:SI 87)
        (reg:SI 4 si [ __c ])) "/usr/include/c++/11/bits/locale_facets.h":1087:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __c ])
        (nil)))
(note 3 15 4 2 NOTE_INSN_DELETED)
(insn 4 3 5 2 (set (reg/v:QI 84 [ __c ])
        (subreg:QI (reg:SI 87) 0)) "/usr/include/c++/11/bits/locale_facets.h":1087:7 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg/i:QI 0 ax)
        (reg/v:QI 84 [ __c ])) "/usr/include/c++/11/bits/locale_facets.h":1088:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:QI 84 [ __c ])
        (nil)))
(insn 13 12 0 2 (use (reg/i:QI 0 ax)) "/usr/include/c++/11/bits/locale_facets.h":1088:21 -1
     (nil))

;; Function std::endl.isra (_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0, funcdef_no=2306, decl_uid=50074, cgraph_uid=1057, symbol_order=1235)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
scanning new insn with uid = 59.
verify found no changes in insn with uid = 59.
deleting insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
Reg 100 uninteresting
Ignoring reg 96, has equiv memory
Reg 97 uninteresting
Ignoring reg 98, has equiv memory
Reg 99 uninteresting
Reg 101 uninteresting
Reg 102 uninteresting
Reg 86 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 96: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 98: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 99: (insn_list:REG_DEP_TRUE 59 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r102,l0) best AREG, allocno AREG
    a4 (r101,l0) best AREG, allocno AREG
    a11 (r100,l0) best DIREG, allocno DIREG
    a7 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best DIREG, allocno DIREG
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best DIREG, allocno DIREG
    a3 (r87,l0) best SIREG, allocno SIREG
    a0 (r86,l0) best DIREG, allocno DIREG

  a0(r86,l0) costs: AREG:1998,1998 DREG:1998,1998 CREG:1998,1998 BREG:1998,1998 SIREG:1998,1998 DIREG:-999,-999 AD_REGS:1998,1998 CLOBBERED_REGS:1998,1998 Q_REGS:1998,1998 NON_Q_REGS:1998,1998 TLS_GOTBASE_REGS:1998,1998 GENERAL_REGS:1998,1998 SSE_FIRST_REG:11988,11988 NO_REX_SSE_REGS:11988,11988 SSE_REGS:11988,11988 MMX_REGS:18981,18981 INT_SSE_REGS:18981,18981 ALL_REGS:311688,311688 MEM:6993,6993
  a1(r102,l0) costs: AREG:-999,-999 DREG:1998,1998 CREG:1998,1998 BREG:1998,1998 SIREG:1998,1998 DIREG:1998,1998 AD_REGS:1998,1998 CLOBBERED_REGS:1998,1998 Q_REGS:1998,1998 NON_Q_REGS:1998,1998 TLS_GOTBASE_REGS:1998,1998 GENERAL_REGS:1998,1998 SSE_FIRST_REG:5994,5994 NO_REX_SSE_REGS:5994,5994 SSE_REGS:5994,5994 MMX_REGS:25974,25974 INT_SSE_REGS:25974,25974 ALL_REGS:423576,423576 MEM:10989,10989
  a2(r95,l0) costs: AREG:1998,1998 DREG:1998,1998 CREG:1998,1998 BREG:1998,1998 SIREG:1998,1998 DIREG:-999,-999 AD_REGS:1998,1998 CLOBBERED_REGS:1998,1998 Q_REGS:1998,1998 NON_Q_REGS:1998,1998 TLS_GOTBASE_REGS:1998,1998 GENERAL_REGS:1998,1998 SSE_FIRST_REG:29994,29994 NO_REX_SSE_REGS:29994,29994 SSE_REGS:29994,29994 MMX_REGS:57987,57987 INT_SSE_REGS:57987,57987 ALL_REGS:947788,947788 MEM:24994,24994
  a3(r87,l0) costs: AREG:1998,1998 DREG:1998,1998 CREG:1998,1998 BREG:1998,1998 SIREG:-999,-999 DIREG:1998,1998 AD_REGS:1998,1998 CLOBBERED_REGS:1998,1998 Q_REGS:1998,1998 NON_Q_REGS:1998,1998 TLS_GOTBASE_REGS:1998,1998 GENERAL_REGS:1998,1998 SSE_FIRST_REG:12570,12570 NO_REX_SSE_REGS:12570,12570 SSE_REGS:12570,12570 MMX_REGS:23819,23819 INT_SSE_REGS:23819,23819 ALL_REGS:389484,389484 MEM:10130,10130
  a4(r101,l0) costs: AREG:-97,-97 DREG:194,194 CREG:194,194 BREG:194,194 SIREG:194,194 DIREG:194,194 AD_REGS:194,194 CLOBBERED_REGS:194,194 Q_REGS:194,194 NON_Q_REGS:194,194 TLS_GOTBASE_REGS:194,194 GENERAL_REGS:194,194 MEM:1067,1067
  a5(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6438,6438 NO_REX_SSE_REGS:6438,6438 SSE_REGS:6438,6438 MMX_REGS:13461,13461 INT_SSE_REGS:13461,13461 ALL_REGS:175748,175748 MEM:5950,5950
  a6(r88,l0) costs: AREG:1170,1170 DREG:1170,1170 CREG:1170,1170 BREG:1170,1170 SIREG:1170,1170 DIREG:879,879 AD_REGS:1170,1170 CLOBBERED_REGS:1170,1170 Q_REGS:1170,1170 NON_Q_REGS:1170,1170 TLS_GOTBASE_REGS:1170,1170 GENERAL_REGS:1170,1170 SSE_FIRST_REG:30426,30426 NO_REX_SSE_REGS:30426,30426 SSE_REGS:30426,30426 MMX_REGS:64923,64923 INT_SSE_REGS:64923,64923 ALL_REGS:969052,969052 MEM:30426,30426
  a7(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5856,5856 NO_REX_SSE_REGS:5856,5856 SSE_REGS:5856,5856 MMX_REGS:11224,11224 INT_SSE_REGS:11224,11224 ALL_REGS:154208,154208 MEM:4880,4880
  a8(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5856,5856 NO_REX_SSE_REGS:5856,5856 SSE_REGS:5856,5856 MMX_REGS:12200,12200 INT_SSE_REGS:12200,12200 ALL_REGS:155184,155184 MEM:0,0
  a9(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:25000,25000 INT_SSE_REGS:25000,25000 ALL_REGS:318000,318000 MEM:12000,12000
  a10(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:25000,25000 INT_SSE_REGS:25000,25000 ALL_REGS:318000,318000 MEM:0,0
  a11(r100,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:-1000,-1000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:6000,6000 NO_REX_SSE_REGS:6000,6000 SSE_REGS:6000,6000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:3996,3996 DREG:3996,3996 CREG:3996,3996 BREG:3996,3996 SIREG:3996,3996 DIREG:1998,-999 AD_REGS:3996,3996 CLOBBERED_REGS:1998,1998 Q_REGS:3996,3996 NON_Q_REGS:1998,1998 TLS_GOTBASE_REGS:1998,1998 GENERAL_REGS:1998,1998 SSE_FIRST_REG:17982,17982 NO_REX_SSE_REGS:17982,17982 SSE_REGS:17982,17982 MMX_REGS:37962,37962 INT_SSE_REGS:24975,24975 ALL_REGS:317682,317682 MEM:17982,17982
  a1(r102,l0) costs: AREG:1998,-999 DREG:3996,3996 CREG:3996,3996 BREG:3996,3996 SIREG:3996,3996 DIREG:3996,3996 AD_REGS:1998,1998 CLOBBERED_REGS:1998,1998 Q_REGS:1998,1998 NON_Q_REGS:3996,3996 TLS_GOTBASE_REGS:3996,3996 GENERAL_REGS:1998,1998 SSE_FIRST_REG:17982,17982 NO_REX_SSE_REGS:17982,17982 SSE_REGS:17982,17982 MMX_REGS:38961,38961 INT_SSE_REGS:25974,25974 ALL_REGS:423576,423576 MEM:16983,16983
  a2(r95,l0) costs: AREG:3996,3996 DREG:3996,3996 CREG:3996,3996 BREG:3996,3996 SIREG:3996,3996 DIREG:1998,-999 AD_REGS:3996,3996 CLOBBERED_REGS:1998,1998 Q_REGS:3996,3996 NON_Q_REGS:1998,1998 TLS_GOTBASE_REGS:1998,1998 GENERAL_REGS:1998,1998 SSE_FIRST_REG:35988,35988 NO_REX_SSE_REGS:35988,35988 SSE_REGS:35988,35988 MMX_REGS:76974,76974 INT_SSE_REGS:63987,63987 ALL_REGS:953788,953788 MEM:35988,35988
  a3(r87,l0) costs: AREG:3996,3996 DREG:3996,3996 CREG:3996,3996 BREG:3996,3996 SIREG:1998,-999 DIREG:3996,3996 AD_REGS:3996,3996 CLOBBERED_REGS:1998,1998 Q_REGS:3996,3996 NON_Q_REGS:1998,1998 TLS_GOTBASE_REGS:1998,1998 GENERAL_REGS:1998,1998 SSE_FIRST_REG:18564,18564 NO_REX_SSE_REGS:18564,18564 SSE_REGS:18564,18564 MMX_REGS:39734,39734 INT_SSE_REGS:26747,26747 ALL_REGS:392412,392412 MEM:18564,18564
  a4(r101,l0) costs: AREG:194,-97 DREG:388,388 CREG:388,388 BREG:388,388 SIREG:388,388 DIREG:388,388 AD_REGS:194,194 CLOBBERED_REGS:194,194 Q_REGS:194,194 NON_Q_REGS:388,388 TLS_GOTBASE_REGS:388,388 GENERAL_REGS:194,194 MEM:1649,1649
  a5(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6438,6438 NO_REX_SSE_REGS:6438,6438 SSE_REGS:6438,6438 MMX_REGS:13949,13949 INT_SSE_REGS:13949,13949 ALL_REGS:178676,178676 MEM:5950,5950
  a6(r88,l0) costs: AREG:2340,2340 DREG:2340,2340 CREG:2340,2340 BREG:2340,2340 SIREG:2340,2340 DIREG:1170,879 AD_REGS:2340,2340 CLOBBERED_REGS:1170,1170 Q_REGS:2340,2340 NON_Q_REGS:1170,1170 TLS_GOTBASE_REGS:1170,1170 GENERAL_REGS:1170,1170 SSE_FIRST_REG:33936,33936 NO_REX_SSE_REGS:33936,33936 SSE_REGS:33936,33936 MMX_REGS:73528,73528 INT_SSE_REGS:65923,65923 ALL_REGS:975052,975052 MEM:33936,33936
  a7(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5856,5856 NO_REX_SSE_REGS:5856,5856 SSE_REGS:5856,5856 MMX_REGS:12688,12688 INT_SSE_REGS:12688,12688 ALL_REGS:157136,157136 MEM:5368,5368
  a8(r98,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5856,5856 NO_REX_SSE_REGS:5856,5856 SSE_REGS:5856,5856 MMX_REGS:12688,12688 INT_SSE_REGS:12688,12688 ALL_REGS:158112,158112 MEM:0,0
  a9(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:324000,324000 MEM:12000,12000
  a10(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:324000,324000 MEM:0,0
  a11(r100,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:2000,-1000 AD_REGS:4000,4000 CLOBBERED_REGS:2000,2000 Q_REGS:4000,4000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:424000,424000 MEM:17000,17000

   Insn 45(l0): point = 0
   Insn 44(l0): point = 2
   Insn 43(l0): point = 4
   Insn 56(l0): point = 6
   Insn 42(l0): point = 8
   Insn 41(l0): point = 10
   Insn 40(l0): point = 12
   Insn 37(l0): point = 15
   Insn 55(l0): point = 17
   Insn 35(l0): point = 19
   Insn 34(l0): point = 21
   Insn 33(l0): point = 23
   Insn 31(l0): point = 26
   Insn 30(l0): point = 28
   Insn 59(l0): point = 30
   Insn 4(l0): point = 32
   Insn 28(l0): point = 34
   Insn 27(l0): point = 36
   Insn 26(l0): point = 38
   Insn 25(l0): point = 40
   Insn 57(l0): point = 43
   Insn 20(l0): point = 45
   Insn 18(l0): point = 48
   Insn 17(l0): point = 50
   Insn 13(l0): point = 53
   Insn 11(l0): point = 56
   Insn 10(l0): point = 58
   Insn 9(l0): point = 60
   Insn 8(l0): point = 62
   Insn 7(l0): point = 64
   Insn 2(l0): point = 66
   Insn 54(l0): point = 68
 a0(r86): [3..4]
 a1(r102): [5..6]
 a2(r95): [56..66] [11..52]
 a3(r87): [43..45] [26..32] [13..15]
 a4(r101): [16..17]
 a5(r92): [20..34]
 a6(r88): [56..60] [46..52] [22..42]
 a7(r99): [29..30]
 a8(r98): [35..36]
 a9(r97): [61..62]
 a10(r96): [63..64]
 a11(r100): [67..68]
Compressing live ranges: from 71 to 24 - 33%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r102): [2..3]
 a2(r95): [4..21]
 a3(r87): [12..13] [8..9] [4..5]
 a4(r101): [6..7]
 a5(r92): [8..9]
 a6(r88): [14..17] [8..11]
 a7(r99): [8..9]
 a8(r98): [10..11]
 a9(r97): [18..19]
 a10(r96): [20..21]
 a11(r100): [22..23]
+++Allocating 72 bytes for conflict table (uncompressed size 96)
;; a0(r86,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r102,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r95,l0) conflicts: a3(r87,l0) a4(r101,l0) a5(r92,l0) a7(r99,l0) a6(r88,l0) a8(r98,l0) a9(r97,l0) a10(r96,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a3(r87,l0) conflicts: a2(r95,l0) a5(r92,l0) a7(r99,l0) a6(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r101,l0) conflicts: a2(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r92,l0) conflicts: a3(r87,l0) a2(r95,l0) a7(r99,l0) a6(r88,l0)
;;     total conflict hard regs: 4-5
;;     conflict hard regs: 4-5

;; a6(r88,l0) conflicts: a3(r87,l0) a2(r95,l0) a5(r92,l0) a7(r99,l0) a8(r98,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a7(r99,l0) conflicts: a3(r87,l0) a2(r95,l0) a5(r92,l0) a6(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r98,l0) conflicts: a2(r95,l0) a6(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r97,l0) conflicts: a2(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r96,l0) conflicts: a2(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r100,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a0(r86)<->a1(r102)@999:move
  cp1:a3(r87)<->a4(r101)@12:shuffle
  cp2:a2(r95)<->a11(r100)@1000:move
  pref0:a1(r102)<-hr0@1498
  pref1:a4(r101)<-hr0@145
  pref2:a11(r100)<-hr5@1500
  pref3:a2(r95)<-hr5@1498
  pref4:a6(r88)<-hr5@145
  pref5:a3(r87)<-hr4@1498
  pref6:a0(r86)<-hr5@1498
  regions=1, blocks=9, points=24
    allocnos=12 (big 0), copies=3, conflicts=0, ranges=15

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r86 1r102 2r95 3r87 4r101 5r92 6r88 7r99 8r98 9r97 10r96 11r100
    modified regnos: 86 87 88 92 95 96 97 98 99 100 101 102
    border:
    Pressure: GENERAL_REGS=5
 Removing pref3:hr5@1498
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@187280
          2:( 0-3 5-6 36-43)@65532
            3:( 0-3 6 36-43)@11900
              4:( 1-3 6 36-43)@67980
      Allocno a0r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a1r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a2r95 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, node:  1-3 6 36-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a3r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a4r101 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a5r92 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 36-43, node:  0-3 6 36-43 (confl regs =  4-5 7-35 44-75)
      Allocno a6r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a7r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a8r98 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a9r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a10r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a11r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
        Forming thread by copy 2:a2r95-a11r100 (freq=1000):
          Result (freq=5999): a2r95(3999) a11r100(2000)
        Forming thread by copy 0:a0r86-a1r102 (freq=999):
          Result (freq=3996): a0r86(1998) a1r102(1998)
        Forming thread by copy 1:a3r87-a4r101 (freq=12):
          Result (freq=2289): a3r87(2095) a4r101(194)
      Pushing a8(r98,l0)(cost 0)
      Pushing a7(r99,l0)(cost 0)
      Pushing a5(r92,l0)(cost 0)
      Pushing a10(r96,l0)(cost 0)
      Pushing a9(r97,l0)(cost 0)
      Pushing a4(r101,l0)(cost 0)
      Pushing a3(r87,l0)(cost 0)
      Pushing a1(r102,l0)(cost 0)
      Pushing a0(r86,l0)(cost 0)
      Pushing a6(r88,l0)(cost 0)
      Pushing a11(r100,l0)(cost 0)
      Pushing a2(r95,l0)(cost 0)
      Popping a2(r95,l0)  --         assign reg 6
      Popping a11(r100,l0)  --         assign reg 5
      Popping a6(r88,l0)  --         assign reg 40
      Popping a0(r86,l0)  --         assign reg 5
      Popping a1(r102,l0)  --         assign reg 0
      Popping a3(r87,l0)  --         assign reg 4
      Popping a4(r101,l0)  --         assign reg 0
      Popping a9(r97,l0)  --         assign reg 0
      Popping a10(r96,l0)  --         assign reg 0
      Popping a5(r92,l0)  --         assign reg 0
      Popping a7(r99,l0)  --         assign reg 1
      Popping a8(r98,l0)  --         assign reg 0
Disposition:
    0:r86  l0     5    3:r87  l0     4    6:r88  l0    40    5:r92  l0     0
    2:r95  l0     6   10:r96  l0     0    9:r97  l0     0    8:r98  l0     0
    7:r99  l0     1   11:r100 l0     5    4:r101 l0     0    1:r102 l0     0
New iteration of spill/restore move
+++Costs: overall -926, reg -926, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::endl.isra

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,2u} r1={6d} r2={6d} r4={8d,2u} r5={10d,5u} r6={1d,8u} r7={1d,13u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,7u} r17={8d,3u} r18={5d} r19={1d,8u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r86={1d,1u} r87={3d,1u} r88={1d,6u,1e} r92={1d,2u,1e} r95={1d,3u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} 
;;    total ref usage 448{377d,68u,3e} in 32{27 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 54 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 54 5 2 2 (set (reg:DI 100)
        (reg:DI 5 di [ __os ])) "/usr/include/c++/11/ostream":684:5 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __os ])
        (nil)))
(insn 2 54 3 2 (set (reg/v/f:DI 95 [ __os ])
        (reg:DI 100)) "/usr/include/c++/11/ostream":684:5 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg/f:DI 96 [ __os_1(D)->_vptr.basic_ostream ])
        (mem/f:DI (reg/v/f:DI 95 [ __os ]) [2 __os_1(D)->_vptr.basic_ostream+0 S8 A64])) "/usr/include/c++/11/ostream":685:39 74 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 95 [ __os ]) [2 __os_1(D)->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 97 [ MEM[(long int *)_2 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 96 [ __os_1(D)->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [7 MEM[(long int *)_2 + -24B]+0 S8 A64])) 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ __os_1(D)->_vptr.basic_ostream ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _14 ])
        (mem/f:DI (plus:DI (plus:DI (reg/v/f:DI 95 [ __os ])
                    (reg:DI 97 [ MEM[(long int *)_2 + -24B] ]))
                (const_int 240 [0xf0])) [19 MEM[(const struct __ctype_type * *)_5 + 240B]+0 S8 A64])) 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97 [ MEM[(long int *)_2 + -24B] ])
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _14 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/basic_ios.h":49:7 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "/usr/include/c++/11/bits/basic_ios.h":49:7 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 15)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 12 14 3 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7f497d673800 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/basic_ios.h":50:18 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7f497d673800 __throw_bad_cast>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
(barrier 14 13 15)
(code_label 15 14 16 4 4 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 88 [ _14 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_14]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/locale_facets.h":877:2 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "/usr/include/c++/11/bits/locale_facets.h":877:2 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 23)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 57 5 (set (reg:SI 87 [ _9 ])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 88 [ _14 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_14]._M_widen[10]+0 S1 A8]))) "/usr/include/c++/11/ostream":685:19 153 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _14 ])
        (nil)))
(jump_insn 57 20 58 5 (set (pc)
        (label_ref 38)) "/usr/include/c++/11/bits/locale_facets.h":878:51 807 {jump}
     (nil)
 -> 38)
(barrier 58 57 23)
(code_label 23 58 24 6 5 (nil) [1 uses])
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _14 ])) "/usr/include/c++/11/bits/locale_facets.h":879:21 74 {*movdi_internal}
     (nil))
(call_insn 26 25 27 6 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7f497c525c00 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/locale_facets.h":879:21 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7f497c525c00 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 6 (set (reg/f:DI 98 [ MEM[(const struct ctype *)_14].D.38127._vptr.facet ])
        (mem/f:DI (reg/f:DI 88 [ _14 ]) [2 MEM[(const struct ctype *)_14].D.38127._vptr.facet+0 S8 A64])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 88 [ _14 ]) [2 MEM[(const struct ctype *)_14].D.38127._vptr.facet+0 S8 A64])
        (nil)))
(insn 28 27 4 6 (set (reg/f:DI 92 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 98 [ MEM[(const struct ctype *)_14].D.38127._vptr.facet ])
                (const_int 48 [0x30])) [23 MEM[(int (*) () *)_24 + 48B]+0 S8 A64])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ MEM[(const struct ctype *)_14].D.38127._vptr.facet ])
        (nil)))
(insn 4 28 59 6 (set (reg:SI 87 [ _9 ])
        (const_int 10 [0xa])) "/usr/include/c++/11/bits/locale_facets.h":880:23 75 {*movsi_internal}
     (nil))
(insn 59 4 30 6 (set (reg/f:DI 99)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>)) 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>)
        (nil)))
(insn 30 59 31 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ _25 ])
            (reg/f:DI 99))) 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_EQUAL (compare:CCZ (reg/f:DI 92 [ _25 ])
                (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>))
            (nil))))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 38)
            (pc))) 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 858993460 (nil)))
 -> 38)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "/usr/include/c++/11/bits/locale_facets.h":880:23 75 {*movsi_internal}
     (nil))
(insn 34 33 35 7 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _14 ])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _14 ])
        (nil)))
(call_insn 35 34 55 7 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 92 [ _25 ]) [0 *OBJ_TYPE_REF(_25;_14->6) S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/locale_facets.h":880:23 824 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _25 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 55 35 36 7 (set (reg:QI 101)
        (reg:QI 0 ax)) "/usr/include/c++/11/bits/locale_facets.h":880:23 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(note 36 55 37 7 NOTE_INSN_DELETED)
(insn 37 36 38 7 (set (reg:SI 87 [ _9 ])
        (sign_extend:SI (reg:QI 101))) "/usr/include/c++/11/ostream":685:19 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 101)
        (nil)))
(code_label 38 37 39 8 6 (nil) [2 uses])
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg:SI 4 si)
        (reg:SI 87 [ _9 ])) "/usr/include/c++/11/ostream":685:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ _9 ])
        (nil)))
(insn 41 40 42 8 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ __os ])) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ __os ])
        (nil)))
(call_insn 42 41 56 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7f497bfa4500 put>) [0 put S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":685:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7f497bfa4500 put>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 56 42 43 8 (set (reg:DI 102)
        (reg:DI 0 ax)) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 43 56 44 8 (set (reg/f:DI 86 [ _8 ])
        (reg:DI 102)) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 44 43 45 8 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _8 ])) "/usr/include/c++/11/ostream":707:24 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ _8 ])
        (nil)))
(call_insn/j 45 44 46 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7f497bfa4800 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":707:24 828 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7f497bfa4800 flush>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 46 45 0)

;; Function main (main, funcdef_no=1812, decl_uid=45098, cgraph_uid=546, symbol_order=576) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 20 (  1.3)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 5, latch 11
;;  depth 1, outer 0
;;  nodes: 5 11 10 9 8 7
;; 2 succs { 5 3 }
;; 3 succs { 14 4 }
;; 4 succs { 13 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 5 12 }
;; 12 succs { 3 }
;; 13 succs { }
;; 14 succs { 1 }
Removing SCRATCH to p128 in insn #4 (nop 2)
rescanning insn with uid = 4.
Removing SCRATCH to p129 in insn #108 (nop 3)
rescanning insn with uid = 108.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 20 (  1.3)
Reg 107 uninteresting
Reg 108 uninteresting
Reg 121 uninteresting
Reg 123 uninteresting
Reg 85 uninteresting
Reg 111 uninteresting
Reg 124 uninteresting
Reg 86 uninteresting
Reg 122: def dominates all uses has unique first use
Reg 84: def dominates all uses has unique first use
Reg 125 uninteresting
Ignoring reg 116, has equiv memory
Reg 117 uninteresting
Ignoring reg 118, has equiv memory
Reg 126 uninteresting
Reg 127 uninteresting
Reg 94 uninteresting
Reg 84 not local to one basic block
Reg 122 not local to one basic block
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 5, latch 11
;;  depth 1, outer 0
;;  nodes: 5 11 10 9 8 7
;; 2 succs { 5 3 }
;; 3 succs { 14 4 }
;; 4 succs { 13 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 5 12 }
;; 12 succs { 3 }
;; 13 succs { }
;; 14 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 107: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 108: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 111: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 116: (insn_list:REG_DEP_TRUE 59 (nil))
init_insns for 118: (insn_list:REG_DEP_TRUE 79 (nil))
init_insns for 121: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 122: (insn_list:REG_DEP_TRUE 81 (nil))
Reg 106 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a0 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r127,l1) best AREG, allocno AREG
    a25 (r126,l1) best AREG, allocno AREG
    a31 (r125,l1) best AREG, allocno AREG
    a6 (r124,l0) best AREG, allocno AREG
    a10 (r123,l0) best AREG, allocno AREG
    a19 (r122,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r121,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a28 (r118,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a29 (r117,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r116,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r111,l0) best SIREG, allocno SIREG
    a11 (r108,l0) best SIREG, allocno SIREG
    a12 (r107,l0) best DIREG, allocno DIREG
    a13 (r106,l0) best SIREG, allocno SIREG
    a26 (r101,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r99,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r95,l1) best DIREG, allocno DIREG
    a21 (r94,l1) best DIREG, allocno DIREG
    a16 (r89,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r88,l1) best DIREG, allocno DIREG
    a15 (r87,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best DIREG, allocno DIREG
    a9 (r85,l0) best DIREG, allocno DIREG
    a20 (r84,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a24 (r83,l1) best SIREG, allocno SIREG

  a0(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a1(r122,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,3264 NO_REX_SSE_REGS:660,3264 SSE_REGS:660,3264 MMX_REGS:1100,6742 INT_SSE_REGS:1100,6742 ALL_REGS:11440,103448 MEM:550,2720
  a2(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,11334 NO_REX_SSE_REGS:660,11334 SSE_REGS:660,11334 MMX_REGS:660,11334 INT_SSE_REGS:660,11334 ALL_REGS:11000,188900 MEM:110,1889
  a3(r87,l0) costs: AREG:0,1780 DREG:0,1780 CREG:0,1780 BREG:0,1780 SIREG:0,1780 DIREG:0,1780 AD_REGS:0,1780 CLOBBERED_REGS:0,1780 Q_REGS:0,1780 NON_Q_REGS:0,1780 TLS_GOTBASE_REGS:0,1780 GENERAL_REGS:0,1780 SSE_FIRST_REG:660,22020 NO_REX_SSE_REGS:660,22020 SSE_REGS:660,22020 MMX_REGS:660,40710 INT_SSE_REGS:660,40710 ALL_REGS:11000,666040 MEM:110,15240
  a4(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,16662 NO_REX_SSE_REGS:660,16662 SSE_REGS:660,16662 MMX_REGS:660,32664 INT_SSE_REGS:660,32664 ALL_REGS:11000,480392 MEM:110,14334
  a5(r86,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2090,2090 INT_SSE_REGS:2090,2090 ALL_REGS:34320,34320 MEM:770,770
  a6(r124,l0) costs: AREG:-110,-110 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1210,1210
  a7(r121,l0) costs: AREG:880,2660 DREG:880,2660 CREG:880,2660 BREG:880,2660 SIREG:880,2660 DIREG:880,2660 AD_REGS:880,2660 CLOBBERED_REGS:880,2660 Q_REGS:880,2660 NON_Q_REGS:880,2660 TLS_GOTBASE_REGS:880,2660 GENERAL_REGS:880,2660 SSE_FIRST_REG:3300,8640 NO_REX_SSE_REGS:3300,8640 SSE_REGS:3300,8640 MMX_REGS:6820,18390 INT_SSE_REGS:6820,18390 ALL_REGS:104720,293400 MEM:3190,8530
  a8(r111,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:-110,-110 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2530,2530 INT_SSE_REGS:2530,2530 ALL_REGS:34760,34760 MEM:1210,1210
  a9(r85,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2090,2090 INT_SSE_REGS:2090,2090 ALL_REGS:34320,34320 MEM:770,770
  a10(r123,l0) costs: AREG:-110,-110 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1210,1210
  a11(r108,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:-110,-110 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2530,2530 INT_SSE_REGS:2530,2530 ALL_REGS:34760,34760 MEM:1210,1210
  a12(r107,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:-110,-110 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2530,2530 INT_SSE_REGS:2530,2530 ALL_REGS:34760,34760 MEM:1210,1210
  a13(r106,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:-110,-110 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1320,1320
  a14(r128,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a15(r87,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:40050,40050 INT_SSE_REGS:40050,40050 ALL_REGS:655040,655040 MEM:15130,15130
  a16(r89,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16002,16002 NO_REX_SSE_REGS:16002,16002 SSE_REGS:16002,16002 MMX_REGS:32004,32004 INT_SSE_REGS:32004,32004 ALL_REGS:469392,469392 MEM:14224,14224
  a17(r99,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10674,10674 NO_REX_SSE_REGS:10674,10674 SSE_REGS:10674,10674 MMX_REGS:10674,10674 INT_SSE_REGS:10674,10674 ALL_REGS:177900,177900 MEM:1779,1779
  a18(r121,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:5340,5340 NO_REX_SSE_REGS:5340,5340 SSE_REGS:5340,5340 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:5340,5340
  a19(r122,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2604,2604 NO_REX_SSE_REGS:2604,2604 SSE_REGS:2604,2604 MMX_REGS:5642,5642 INT_SSE_REGS:5642,5642 ALL_REGS:92008,92008 MEM:2170,2170
  a20(r84,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10674,10674 NO_REX_SSE_REGS:10674,10674 SSE_REGS:10674,10674 MMX_REGS:16897,16897 INT_SSE_REGS:16897,16897 ALL_REGS:277468,277468 MEM:5335,5335
  a21(r94,l1) costs: AREG:1778,1778 DREG:1778,1778 CREG:1778,1778 BREG:1778,1778 SIREG:1778,1778 DIREG:-889,-889 AD_REGS:1778,1778 CLOBBERED_REGS:1778,1778 Q_REGS:1778,1778 NON_Q_REGS:1778,1778 TLS_GOTBASE_REGS:1778,1778 GENERAL_REGS:1778,1778 SSE_FIRST_REG:10668,10668 NO_REX_SSE_REGS:10668,10668 SSE_REGS:10668,10668 MMX_REGS:16891,16891 INT_SSE_REGS:16891,16891 ALL_REGS:277368,277368 MEM:6223,6223
  a22(r127,l1) costs: AREG:-889,-889 DREG:1778,1778 CREG:1778,1778 BREG:1778,1778 SIREG:1778,1778 DIREG:1778,1778 AD_REGS:1778,1778 CLOBBERED_REGS:1778,1778 Q_REGS:1778,1778 NON_Q_REGS:1778,1778 TLS_GOTBASE_REGS:1778,1778 GENERAL_REGS:1778,1778 SSE_FIRST_REG:5334,5334 NO_REX_SSE_REGS:5334,5334 SSE_REGS:5334,5334 MMX_REGS:23114,23114 INT_SSE_REGS:23114,23114 ALL_REGS:376936,376936 MEM:9779,9779
  a23(r88,l1) costs: AREG:1778,1778 DREG:1778,1778 CREG:1778,1778 BREG:1778,1778 SIREG:1778,1778 DIREG:-889,-889 AD_REGS:1778,1778 CLOBBERED_REGS:1778,1778 Q_REGS:1778,1778 NON_Q_REGS:1778,1778 TLS_GOTBASE_REGS:1778,1778 GENERAL_REGS:1778,1778 SSE_FIRST_REG:26694,26694 NO_REX_SSE_REGS:26694,26694 SSE_REGS:26694,26694 MMX_REGS:51607,51607 INT_SSE_REGS:51607,51607 ALL_REGS:843508,843508 MEM:22244,22244
  a24(r83,l1) costs: AREG:1778,1778 DREG:1778,1778 CREG:1778,1778 BREG:1778,1778 SIREG:-889,-889 DIREG:1778,1778 AD_REGS:1778,1778 CLOBBERED_REGS:1778,1778 Q_REGS:1778,1778 NON_Q_REGS:1778,1778 TLS_GOTBASE_REGS:1778,1778 GENERAL_REGS:1778,1778 SSE_FIRST_REG:11184,11184 NO_REX_SSE_REGS:11184,11184 SSE_REGS:11184,11184 MMX_REGS:21194,21194 INT_SSE_REGS:21194,21194 ALL_REGS:346560,346560 MEM:9014,9014
  a25(r126,l1) costs: AREG:-87,-87 DREG:174,174 CREG:174,174 BREG:174,174 SIREG:174,174 DIREG:174,174 AD_REGS:174,174 CLOBBERED_REGS:174,174 Q_REGS:174,174 NON_Q_REGS:174,174 TLS_GOTBASE_REGS:174,174 GENERAL_REGS:174,174 MEM:957,957
  a26(r101,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5730,5730 NO_REX_SSE_REGS:5730,5730 SSE_REGS:5730,5730 MMX_REGS:11981,11981 INT_SSE_REGS:11981,11981 ALL_REGS:156456,156456 MEM:5296,5296
  a27(r95,l1) costs: AREG:1042,1042 DREG:1042,1042 CREG:1042,1042 BREG:1042,1042 SIREG:1042,1042 DIREG:781,781 AD_REGS:1042,1042 CLOBBERED_REGS:1042,1042 Q_REGS:1042,1042 NON_Q_REGS:1042,1042 TLS_GOTBASE_REGS:1042,1042 GENERAL_REGS:1042,1042 SSE_FIRST_REG:27072,27072 NO_REX_SSE_REGS:27072,27072 SSE_REGS:27072,27072 MMX_REGS:57766,57766 INT_SSE_REGS:57766,57766 ALL_REGS:862204,862204 MEM:27072,27072
  a28(r118,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5208,5208 NO_REX_SSE_REGS:5208,5208 SSE_REGS:5208,5208 MMX_REGS:10850,10850 INT_SSE_REGS:10850,10850 ALL_REGS:138012,138012 MEM:0,0
  a29(r117,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:22250,22250 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:10680,10680
  a30(r116,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:22250,22250 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:0,0
  a31(r125,l1) costs: AREG:-890,-890 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:5340,5340 NO_REX_SSE_REGS:5340,5340 SSE_REGS:5340,5340 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:9790,9790


Pass 1 for finding pseudo/allocno costs

    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r111: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r129,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a1(r122,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,3264 NO_REX_SSE_REGS:660,3264 SSE_REGS:660,3264 MMX_REGS:1430,7072 INT_SSE_REGS:1430,7072 ALL_REGS:12100,104108 MEM:660,2830
  a2(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,11334 NO_REX_SSE_REGS:660,11334 SSE_REGS:660,11334 MMX_REGS:1320,22668 INT_SSE_REGS:1320,22668 ALL_REGS:11660,200234 MEM:660,10444
  a3(r87,l0) costs: GENERAL_REGS:0,1780 SSE_FIRST_REG:660,27360 NO_REX_SSE_REGS:660,27360 SSE_REGS:660,27360 MMX_REGS:1320,58280 INT_SSE_REGS:1320,46710 ALL_REGS:11660,672040 MEM:660,24690
  a4(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,16662 NO_REX_SSE_REGS:660,16662 SSE_REGS:660,16662 MMX_REGS:1320,35991 INT_SSE_REGS:1320,35991 ALL_REGS:11660,486386 MEM:660,14884
  a5(r86,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4180,4180 INT_SSE_REGS:2750,2750 ALL_REGS:34980,34980 MEM:1980,1980
  a6(r124,l0) costs: AREG:220,-110 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:440,440 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1870,1870
  a7(r121,l0) costs: GENERAL_REGS:880,2660 SSE_FIRST_REG:5940,16620 NO_REX_SSE_REGS:5940,16620 SSE_REGS:5940,16620 MMX_REGS:12870,36010 INT_SSE_REGS:7150,18720 ALL_REGS:105380,294060 MEM:5940,16620
  a8(r111,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:220,-110 DIREG:440,440 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:35420,35420 MEM:1980,1980
  a9(r85,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4180,4180 INT_SSE_REGS:2750,2750 ALL_REGS:34980,34980 MEM:1980,1980
  a10(r123,l0) costs: AREG:220,-110 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:440,440 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1870,1870
  a11(r108,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:220,-110 DIREG:440,440 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:35420,35420 MEM:1980,1980
  a12(r107,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:220,-110 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:35420,35420 MEM:1980,1980
  a13(r106,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:220,-110 DIREG:440,440 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1980,1980
  a14(r128,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a15(r87,l1) costs: GENERAL_REGS:1780,1780 SSE_FIRST_REG:26700,26700 NO_REX_SSE_REGS:26700,26700 SSE_REGS:26700,26700 MMX_REGS:56960,56960 INT_SSE_REGS:45390,45390 ALL_REGS:660380,660380 MEM:24030,24030
  a16(r89,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16002,16002 NO_REX_SSE_REGS:16002,16002 SSE_REGS:16002,16002 MMX_REGS:34671,34671 INT_SSE_REGS:34671,34671 ALL_REGS:474726,474726 MEM:14224,14224
  a17(r99,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10674,10674 NO_REX_SSE_REGS:10674,10674 SSE_REGS:10674,10674 MMX_REGS:21348,21348 INT_SSE_REGS:21348,21348 ALL_REGS:188574,188574 MEM:9784,9784
  a18(r121,l1) costs: GENERAL_REGS:1780,1780 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:23140,23140 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:10680,10680
  a19(r122,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2604,2604 NO_REX_SSE_REGS:2604,2604 SSE_REGS:2604,2604 MMX_REGS:5642,5642 INT_SSE_REGS:5642,5642 ALL_REGS:92008,92008 MEM:2170,2170
  a20(r84,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10674,10674 NO_REX_SSE_REGS:10674,10674 SSE_REGS:10674,10674 MMX_REGS:22237,22237 INT_SSE_REGS:22237,22237 ALL_REGS:282808,282808 MEM:9785,9785
  a21(r94,l1) costs: AREG:3556,3556 DREG:3556,3556 CREG:3556,3556 BREG:3556,3556 SIREG:3556,3556 DIREG:1778,-889 AD_REGS:3556,3556 CLOBBERED_REGS:1778,1778 Q_REGS:3556,3556 NON_Q_REGS:1778,1778 TLS_GOTBASE_REGS:1778,1778 GENERAL_REGS:1778,1778 SSE_FIRST_REG:16002,16002 NO_REX_SSE_REGS:16002,16002 SSE_REGS:16002,16002 MMX_REGS:33782,33782 INT_SSE_REGS:22225,22225 ALL_REGS:282702,282702 MEM:16002,16002
  a22(r127,l1) costs: AREG:1778,-889 DREG:3556,3556 CREG:3556,3556 BREG:3556,3556 SIREG:3556,3556 DIREG:3556,3556 AD_REGS:1778,1778 CLOBBERED_REGS:1778,1778 Q_REGS:1778,1778 NON_Q_REGS:3556,3556 TLS_GOTBASE_REGS:3556,3556 GENERAL_REGS:1778,1778 SSE_FIRST_REG:16002,16002 NO_REX_SSE_REGS:16002,16002 SSE_REGS:16002,16002 MMX_REGS:34671,34671 INT_SSE_REGS:23114,23114 ALL_REGS:376936,376936 MEM:15113,15113
  a23(r88,l1) costs: AREG:3556,3556 DREG:3556,3556 CREG:3556,3556 BREG:3556,3556 SIREG:3556,3556 DIREG:1778,-889 AD_REGS:3556,3556 CLOBBERED_REGS:1778,1778 Q_REGS:3556,3556 NON_Q_REGS:1778,1778 TLS_GOTBASE_REGS:1778,1778 GENERAL_REGS:1778,1778 SSE_FIRST_REG:32028,32028 NO_REX_SSE_REGS:32028,32028 SSE_REGS:32028,32028 MMX_REGS:68504,68504 INT_SSE_REGS:56947,56947 ALL_REGS:848848,848848 MEM:32028,32028
  a24(r83,l1) costs: AREG:3556,3556 DREG:3556,3556 CREG:3556,3556 BREG:3556,3556 SIREG:1778,-889 DIREG:3556,3556 AD_REGS:3556,3556 CLOBBERED_REGS:1778,1778 Q_REGS:3556,3556 NON_Q_REGS:1778,1778 TLS_GOTBASE_REGS:1778,1778 GENERAL_REGS:1778,1778 SSE_FIRST_REG:16518,16518 NO_REX_SSE_REGS:16518,16518 SSE_REGS:16518,16518 MMX_REGS:35355,35355 INT_SSE_REGS:23798,23798 ALL_REGS:349164,349164 MEM:16518,16518
  a25(r126,l1) costs: AREG:174,-87 DREG:348,348 CREG:348,348 BREG:348,348 SIREG:348,348 DIREG:348,348 AD_REGS:174,174 CLOBBERED_REGS:174,174 Q_REGS:174,174 NON_Q_REGS:348,348 TLS_GOTBASE_REGS:348,348 GENERAL_REGS:174,174 MEM:1479,1479
  a26(r101,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5730,5730 NO_REX_SSE_REGS:5730,5730 SSE_REGS:5730,5730 MMX_REGS:12415,12415 INT_SSE_REGS:12415,12415 ALL_REGS:159060,159060 MEM:5296,5296
  a27(r95,l1) costs: AREG:2084,2084 DREG:2084,2084 CREG:2084,2084 BREG:2084,2084 SIREG:2084,2084 DIREG:1042,781 AD_REGS:2084,2084 CLOBBERED_REGS:1042,1042 Q_REGS:2084,2084 NON_Q_REGS:1042,1042 TLS_GOTBASE_REGS:1042,1042 GENERAL_REGS:1042,1042 SSE_FIRST_REG:30198,30198 NO_REX_SSE_REGS:30198,30198 SSE_REGS:30198,30198 MMX_REGS:65429,65429 INT_SSE_REGS:58656,58656 ALL_REGS:867544,867544 MEM:30198,30198
  a28(r118,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5208,5208 NO_REX_SSE_REGS:5208,5208 SSE_REGS:5208,5208 MMX_REGS:11284,11284 INT_SSE_REGS:11284,11284 ALL_REGS:140616,140616 MEM:0,0
  a29(r117,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:288360,288360 MEM:10680,10680
  a30(r116,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:288360,288360 MEM:0,0
  a31(r125,l1) costs: AREG:1780,-890 DREG:3560,3560 CREG:3560,3560 BREG:3560,3560 SIREG:3560,3560 DIREG:3560,3560 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:3560,3560 TLS_GOTBASE_REGS:3560,3560 GENERAL_REGS:1780,1780 SSE_FIRST_REG:16020,16020 NO_REX_SSE_REGS:16020,16020 SSE_REGS:16020,16020 MMX_REGS:34710,34710 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:15130,15130

   Insn 114(l0): point = 0
   Insn 113(l0): point = 2
   Insn 110(l0): point = 5
   Insn 65(l0): point = 8
   Insn 138(l0): point = 11
   Insn 109(l0): point = 14
   Insn 108(l0): point = 16
   Insn 143(l0): point = 19
   Insn 45(l0): point = 22
   Insn 44(l0): point = 24
   Insn 81(l0): point = 26
   Insn 7(l0): point = 28
   Insn 6(l0): point = 30
   Insn 5(l0): point = 32
   Insn 41(l0): point = 34
   Insn 40(l0): point = 36
   Insn 39(l0): point = 38
   Insn 132(l0): point = 40
   Insn 38(l0): point = 42
   Insn 37(l0): point = 44
   Insn 35(l0): point = 46
   Insn 34(l0): point = 48
   Insn 33(l0): point = 50
   Insn 31(l0): point = 52
   Insn 30(l0): point = 54
   Insn 29(l0): point = 56
   Insn 28(l0): point = 58
   Insn 27(l0): point = 60
   Insn 26(l0): point = 62
   Insn 131(l0): point = 64
   Insn 25(l0): point = 66
   Insn 24(l0): point = 68
   Insn 22(l0): point = 70
   Insn 21(l0): point = 72
   Insn 20(l0): point = 74
   Insn 19(l0): point = 76
   Insn 18(l0): point = 78
   Insn 17(l0): point = 80
   Insn 16(l0): point = 82
   Insn 15(l0): point = 84
   Insn 14(l0): point = 86
   Insn 13(l0): point = 88
   Insn 12(l0): point = 90
   Insn 11(l0): point = 92
   Insn 4(l0): point = 94
   Insn 63(l1): point = 97
   Insn 62(l1): point = 99
   Insn 61(l1): point = 101
   Insn 60(l1): point = 103
   Insn 59(l1): point = 105
   Insn 58(l1): point = 107
   Insn 133(l1): point = 109
   Insn 57(l1): point = 111
   Insn 56(l1): point = 113
   Insn 54(l1): point = 115
   Insn 53(l1): point = 117
   Insn 52(l1): point = 119
   Insn 101(l1): point = 122
   Insn 100(l1): point = 124
   Insn 99(l1): point = 126
   Insn 98(l1): point = 128
   Insn 97(l1): point = 130
   Insn 96(l1): point = 132
   Insn 95(l1): point = 134
   Insn 135(l1): point = 136
   Insn 94(l1): point = 138
   Insn 93(l1): point = 140
   Insn 92(l1): point = 142
   Insn 89(l1): point = 145
   Insn 134(l1): point = 147
   Insn 87(l1): point = 149
   Insn 86(l1): point = 151
   Insn 85(l1): point = 153
   Insn 83(l1): point = 156
   Insn 82(l1): point = 158
   Insn 8(l1): point = 160
   Insn 80(l1): point = 162
   Insn 79(l1): point = 164
   Insn 78(l1): point = 166
   Insn 77(l1): point = 168
   Insn 140(l1): point = 171
   Insn 72(l1): point = 173
   Insn 70(l1): point = 176
   Insn 69(l1): point = 178
 a0(r129): [16..16]
 a1(r122): [22..26]
 a2(r99): [22..28]
 a3(r87): [22..30]
 a4(r89): [22..32]
 a5(r86): [37..38]
 a6(r124): [39..40]
 a7(r121): [22..76]
 a8(r111): [53..54]
 a9(r85): [61..62]
 a10(r123): [63..64]
 a11(r108): [79..80]
 a12(r107): [87..88]
 a13(r106): [91..92]
 a14(r128): [94..94]
 a15(r87): [97..180]
 a16(r89): [97..180]
 a17(r99): [118..126]
 a18(r121): [97..180]
 a19(r122): [97..180]
 a20(r84): [127..180] [97..119]
 a21(r94): [133..134]
 a22(r127): [135..136]
 a23(r88): [141..180] [97..107]
 a24(r83): [171..173] [156..160] [143..145]
 a25(r126): [146..147]
 a26(r101): [150..162]
 a27(r95): [174..180] [152..170] [97..101]
 a28(r118): [163..164]
 a29(r117): [102..103]
 a30(r116): [104..105]
 a31(r125): [108..109]
 Rebuilding regno allocno list for 127
 Rebuilding regno allocno list for 126
 Rebuilding regno allocno list for 125
      Moving ranges of a19r122 to a1r122:  [97..180]
      Moving ranges of a18r121 to a7r121:  [97..180]
 Rebuilding regno allocno list for 118
 Rebuilding regno allocno list for 117
 Rebuilding regno allocno list for 116
 Rebuilding regno allocno list for 101
      Moving ranges of a17r99 to a2r99:  [118..126]
 Rebuilding regno allocno list for 95
 Rebuilding regno allocno list for 94
      Moving ranges of a16r89 to a4r89:  [97..180]
 Rebuilding regno allocno list for 88
      Moving ranges of a15r87 to a3r87:  [97..180]
 Rebuilding regno allocno list for 84
 Rebuilding regno allocno list for 83
Compressing live ranges: from 181 to 46 - 25%
Ranges after the compression:
 a0(r129): [0..0]
 a1(r122): [20..45] [1..2]
 a2(r99): [28..29] [1..2]
 a3(r87): [20..45] [1..2]
 a4(r89): [20..45] [1..2]
 a5(r86): [3..4]
 a6(r124): [5..6]
 a7(r121): [20..45] [1..12]
 a8(r111): [7..8]
 a9(r85): [9..10]
 a10(r123): [11..12]
 a11(r108): [13..14]
 a12(r107): [15..16]
 a13(r106): [17..18]
 a14(r128): [19..19]
 a20(r84): [20..45]
 a21(r94): [30..31]
 a22(r127): [32..33]
 a23(r88): [34..45] [20..25]
 a24(r83): [42..43] [38..39] [34..35]
 a25(r126): [36..37]
 a26(r101): [38..39]
 a27(r95): [44..45] [38..41] [20..21]
 a28(r118): [40..41]
 a29(r117): [22..23]
 a30(r116): [24..25]
 a31(r125): [26..27]
+++Allocating 208 bytes for conflict table (uncompressed size 256)
;; a0(r129,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r122,l0) conflicts: a2(r99,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0) a27(r95,l0) a29(r117,l0) a30(r116,l0) a31(r125,l0) a21(r94,l0) a22(r127,l0) a24(r83,l0) a25(r126,l0) a26(r101,l0) a28(r118,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a2(r99,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r87,l0) conflicts: a2(r99,l0) a1(r122,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0) a27(r95,l0) a29(r117,l0) a30(r116,l0) a31(r125,l0) a21(r94,l0) a22(r127,l0) a24(r83,l0) a25(r126,l0) a26(r101,l0) a28(r118,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a4(r89,l0) conflicts: a2(r99,l0) a1(r122,l0) a3(r87,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0) a27(r95,l0) a29(r117,l0) a30(r116,l0) a31(r125,l0) a21(r94,l0) a22(r127,l0) a24(r83,l0) a25(r126,l0) a26(r101,l0) a28(r118,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a5(r86,l0) conflicts: a7(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r124,l0) conflicts: a7(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r121,l0) conflicts: a2(r99,l0) a1(r122,l0) a3(r87,l0) a4(r89,l0) a5(r86,l0) a6(r124,l0) a8(r111,l0) a9(r85,l0) a10(r123,l0) a20(r84,l0) a23(r88,l0) a27(r95,l0) a29(r117,l0) a30(r116,l0) a31(r125,l0) a21(r94,l0) a22(r127,l0) a24(r83,l0) a25(r126,l0) a26(r101,l0) a28(r118,l0)
;;     total conflict hard regs: 0-1 4-5
;;     conflict hard regs: 0-1 4-5

;; a8(r111,l0) conflicts: a7(r121,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a9(r85,l0) conflicts: a7(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r123,l0) conflicts: a7(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r108,l0) conflicts:
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a12(r107,l0) conflicts:
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a13(r106,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r128,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r84,l0) conflicts: a2(r99,l0) a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a23(r88,l0) a27(r95,l0) a29(r117,l0) a30(r116,l0) a31(r125,l0) a21(r94,l0) a22(r127,l0) a24(r83,l0) a25(r126,l0) a26(r101,l0) a28(r118,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a21(r94,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r127,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r88,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a27(r95,l0) a29(r117,l0) a30(r116,l0) a24(r83,l0) a25(r126,l0) a26(r101,l0) a28(r118,l0)
;;     total conflict hard regs: 0 4-5
;;     conflict hard regs: 0 4-5

;; a24(r83,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0) a27(r95,l0) a26(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r126,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r101,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0) a27(r95,l0) a24(r83,l0)
;;     total conflict hard regs: 4-5
;;     conflict hard regs: 4-5

;; a27(r95,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0) a24(r83,l0) a26(r101,l0) a28(r118,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a28(r118,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0) a27(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r117,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r116,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0) a23(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r125,l0) conflicts: a1(r122,l0) a3(r87,l0) a4(r89,l0) a7(r121,l0) a20(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a21(r94)<->a22(r127)@889:move
  cp1:a24(r83)<->a25(r126)@10:shuffle
  cp2:a23(r88)<->a31(r125)@890:move
  cp3:a9(r85)<->a10(r123)@110:move
  cp4:a5(r86)<->a6(r124)@110:move
  pref0:a22(r127)<-hr0@1333
  pref1:a25(r126)<-hr0@130
  pref2:a31(r125)<-hr0@1335
  pref3:a6(r124)<-hr0@165
  pref4:a10(r123)<-hr0@165
  pref5:a8(r111)<-hr4@165
  pref6:a11(r108)<-hr4@165
  pref7:a12(r107)<-hr5@165
  pref8:a13(r106)<-hr4@165
  pref9:a27(r95)<-hr5@130
  pref10:a21(r94)<-hr5@1333
  pref11:a23(r88)<-hr5@1333
  pref12:a5(r86)<-hr5@165
  pref13:a9(r85)<-hr5@165
  pref14:a24(r83)<-hr4@1333
  regions=2, blocks=15, points=46
    allocnos=32 (big 0), copies=5, conflicts=0, ranges=37

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 14 13 12 6 11 10 9 8 7 5 4 3 2
    all: 0r129 1r122 2r99 3r87 4r89 5r86 6r124 7r121 8r111 9r85 10r123 11r108 12r107 13r106 14r128 20r84 21r94 22r127 23r88 24r83 25r126 26r101 27r95 28r118 29r117 30r116 31r125
    modified regnos: 83 84 85 86 87 88 89 94 95 99 101 106 107 108 111 116 117 118 121 122 123 124 125 126 127 128 129
    border:
    Pressure: GENERAL_REGS=9
 Removing pref11:hr5@1333
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@201120
          2:( 0-3 5-6 36-43)@62492
            3:( 0-3 6 36-43)@10592
              4:( 1-3 6 36-43)@60500
                5:( 3 6 40-43)@128738
      Allocno a0r129 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a1r122 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a2r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a3r87 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a4r89 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a5r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a6r124 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a7r121 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0-1 4-5 7-35 44-75)
      Allocno a8r111 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, ^node:  0-6 36-43 (confl regs =  1 7-35 44-75)
      Allocno a9r85 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a10r123 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a11r108 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, ^node:  0-6 36-43 (confl regs =  1 7-35 44-75)
      Allocno a12r107 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a13r106 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a14r128 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a20r84 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a21r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a22r127 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a23r88 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, node:  1-3 6 36-43 (confl regs =  0 4-5 7-35 44-75)
      Allocno a24r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a25r126 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a26r101 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 36-43, node:  0-3 6 36-43 (confl regs =  4-5 7-35 44-75)
      Allocno a27r95 of GENERAL_REGS(15) has 14 avail. regs  0-3 5-6 36-43, node:  0-3 5-6 36-43 (confl regs =  4 7-35 44-75)
      Allocno a28r118 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a29r117 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a30r116 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a31r125 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
        Forming thread by copy 0:a21r94-a22r127 (freq=889):
          Result (freq=3556): a21r94(1778) a22r127(1778)
        Forming thread by copy 3:a9r85-a10r123 (freq=110):
          Result (freq=440): a9r85(220) a10r123(220)
        Forming thread by copy 4:a5r86-a6r124 (freq=110):
          Result (freq=440): a5r86(220) a6r124(220)
        Forming thread by copy 1:a24r83-a25r126 (freq=10):
          Result (freq=2038): a24r83(1864) a25r126(174)
      Pushing a14(r128,l0)(cost 0)
      Pushing a0(r129,l0)(cost 0)
      Pushing a13(r106,l0)(cost 0)
      Pushing a12(r107,l0)(cost 0)
      Pushing a11(r108,l0)(cost 0)
      Pushing a8(r111,l0)(cost 0)
      Pushing a10(r123,l0)(cost 0)
      Pushing a9(r85,l0)(cost 0)
      Pushing a6(r124,l0)(cost 0)
      Pushing a5(r86,l0)(cost 0)
      Pushing a28(r118,l0)(cost 0)
      Forming thread from allocno a23r88:
        Forming thread by copy 2:a23r88-a31r125 (freq=890):
          Result (freq=5339): a23r88(3559) a31r125(1780)
        Making a23(r88,l0) colorable
      Pushing a26(r101,l0)(cost 0)
      Pushing a31(r125,l0)(cost 0)
      Pushing a30(r116,l0)(cost 0)
      Pushing a29(r117,l0)(cost 0)
      Pushing a2(r99,l0)(cost 0)
      Pushing a25(r126,l0)(cost 0)
      Pushing a24(r83,l0)(cost 0)
      Pushing a22(r127,l0)(cost 0)
      Pushing a21(r94,l0)(cost 0)
      Pushing a27(r95,l0)(cost 0)
      Forming thread from allocno a1r122:
        Making a1(r122,l0) colorable
      Forming thread from allocno a3r87:
        Making a3(r87,l0) colorable
      Forming thread from allocno a4r89:
        Making a4(r89,l0) colorable
      Forming thread from allocno a7r121:
        Making a7(r121,l0) colorable
      Forming thread from allocno a20r84:
        Making a20(r84,l0) colorable
      Pushing a1(r122,l0)(cost 2830)
      Pushing a7(r121,l0)(cost 13960)
      Pushing a20(r84,l0)(cost 9785)
      Pushing a4(r89,l0)(cost 14884)
      Pushing a3(r87,l0)(cost 22910)
      Pushing a23(r88,l0)(cost 30250)
      Popping a23(r88,l0)  --         assign reg 6
      Popping a3(r87,l0)  --         assign reg 3
      Popping a4(r89,l0)  --         assign reg 40
      Popping a20(r84,l0)  --         assign reg 41
      Popping a7(r121,l0)  --         assign reg 42
      Popping a1(r122,l0)  --         assign reg 43
      Popping a27(r95,l0)  --         assign reg 5
      Popping a21(r94,l0)  --         assign reg 5
      Popping a22(r127,l0)  --         assign reg 0
      Popping a24(r83,l0)  --         assign reg 4
      Popping a25(r126,l0)  --         assign reg 0
      Popping a2(r99,l0)  --         assign reg 0
      Popping a29(r117,l0)  --         assign reg 0
      Popping a30(r116,l0)  --         assign reg 0
      Popping a31(r125,l0)  --         assign reg 0
      Popping a26(r101,l0)  --         assign reg 0
      Popping a28(r118,l0)  --         assign reg 0
      Popping a5(r86,l0)  --         assign reg 5
      Popping a6(r124,l0)  --         assign reg 0
      Popping a9(r85,l0)  --         assign reg 5
      Popping a10(r123,l0)  --         assign reg 0
      Popping a8(r111,l0)  --         assign reg 4
      Popping a11(r108,l0)  --         assign reg 4
      Popping a12(r107,l0)  --         assign reg 5
      Popping a13(r106,l0)  --         assign reg 4
      Popping a0(r129,l0)  --         assign reg 0
      Popping a14(r128,l0)  --         assign reg 0
Spilling a1r122 for a27r95
Assigning 43 to a27r95
       a1(r122,l0)  -- assign memory
Disposition:
   24:r83  l0     4   20:r84  l0    41    9:r85  l0     5    5:r86  l0     5
    3:r87  l0     3   23:r88  l0     6    4:r89  l0    40   21:r94  l0     5
   27:r95  l0    43    2:r99  l0     0   26:r101 l0     0   13:r106 l0     4
   12:r107 l0     5   11:r108 l0     4    8:r111 l0     4   30:r116 l0     0
   29:r117 l0     0   28:r118 l0     0    7:r121 l0    42    1:r122 l0   mem
   10:r123 l0     0    6:r124 l0     0   31:r125 l0     0   25:r126 l0     0
   22:r127 l0     0   14:r128 l0     0    0:r129 l0     0
New iteration of spill/restore move
+++Costs: overall 5566, reg 2736, mem 2830, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={16d,7u} r1={17d,2u} r2={15d} r4={23d,8u} r5={27d,12u} r6={1d,14u} r7={1d,28u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={1d,13u} r17={24d,6u} r18={14d} r19={1d,19u,2e} r20={15d} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={15d} r37={15d} r38={14d} r39={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r83={3d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={2d,3u} r88={1d,3u,1e} r89={2d,2u} r94={1d,1u} r95={1d,6u,1e} r99={2d,1u} r101={1d,2u,1e} r106={1d,1u} r107={1d,1u} r108={1d,1u} r111={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r121={1d,5u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d} r129={1d} 
;;    total ref usage 1176{1022d,149u,5e} in 84{70 regular + 14 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [11 D.50135+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 128)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":7:1 1159 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 128)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 4 12 2 (parallel [
            (set (reg/f:DI 106)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":13:9 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/f:DI 106)) "../fib.cpp":13:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 13 12 14 2 (set (reg/f:DI 107)
        (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f497c104ab0 cin>)) "../fib.cpp":13:9 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f497c104ab0 cin>)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/f:DI 107)) "../fib.cpp":13:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f497c104ab0 cin>)
            (nil))))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f497c02d400 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) "../fib.cpp":13:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f497c02d400 operator>>>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (const_int 2 [0x2])) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 108)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f497bd65750 *.LC0>)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f497bd65750 *.LC0>)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/f:DI 108)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f497bd65750 *.LC0>)
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 121)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 121)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7f497d24c600 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":616:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7f497d24c600 __ostream_insert>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 22 21 24 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "../fib.cpp":15:18 75 {*movsi_internal}
     (nil))
(insn 24 22 25 2 (set (reg:DI 5 di)
        (reg/f:DI 121)) "../fib.cpp":15:18 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 25 24 131 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":15:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 131 25 26 2 (set (reg:DI 123)
        (reg:DI 0 ax)) "../fib.cpp":15:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 26 131 27 2 (set (reg/f:DI 85 [ _9 ])
        (reg:DI 123)) "../fib.cpp":15:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _9 ])) "/usr/include/c++/11/ostream":113:13 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _9 ])
        (nil)))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x7f497bd34700 endl.isra>) [0 endl.isra S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ostream":113:13 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x7f497bd34700 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (const_int 2 [0x2])) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg/f:DI 111)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f497bd657e0 *.LC1>)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f497bd657e0 *.LC1>)
        (nil)))
(insn 31 30 33 2 (set (reg:DI 4 si)
        (reg/f:DI 111)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f497bd657e0 *.LC1>)
            (nil))))
(insn 33 31 34 2 (set (reg:DI 5 di)
        (reg/f:DI 121)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 34 33 35 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7f497d24c600 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":616:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7f497d24c600 __ostream_insert>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 37 2 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "../fib.cpp":19:18 75 {*movsi_internal}
     (nil))
(insn 37 35 38 2 (set (reg:DI 5 di)
        (reg/f:DI 121)) "../fib.cpp":19:18 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 38 37 132 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":19:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 132 38 39 2 (set (reg:DI 124)
        (reg:DI 0 ax)) "../fib.cpp":19:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 39 132 40 2 (set (reg/f:DI 86 [ _11 ])
        (reg:DI 124)) "../fib.cpp":19:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _11 ])) "/usr/include/c++/11/ostream":113:13 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ _11 ])
        (nil)))
(call_insn 41 40 5 2 (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x7f497bd34700 endl.isra>) [0 endl.isra S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ostream":113:13 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x7f497bd34700 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 5 41 6 2 (set (reg/v:SI 89 [ i ])
        (const_int 1 [0x1])) "../fib.cpp":12:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 87 [ b ])
        (const_int 1 [0x1])) "../fib.cpp":11:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 81 2 (set (reg/v:SI 99 [ a ])
        (const_int 0 [0])) "../fib.cpp":10:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 81 7 44 2 (set (reg/f:DI 122)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>)) 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>)
        (nil)))
(insn 44 81 45 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [12 n+0 S4 A32])
            (const_int 1 [0x1]))) "../fib.cpp":20:11 11 {*cmpsi_1}
     (nil))
(jump_insn 45 44 102 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) "../fib.cpp":20:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 50)
(code_label 102 45 46 3 15 (nil) [1 uses])
(note 46 102 108 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 108 46 109 3 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [11 D.50135+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 129))
        ]) "../fib.cpp":28:1 1164 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 129)
        (nil)))
(jump_insn 109 108 136 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "../fib.cpp":28:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 112)
(note 136 109 138 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 138 136 139 4 (set (pc)
        (label_ref 137)) 807 {jump}
     (nil)
 -> 137)
(barrier 139 138 50)
(code_label 50 139 51 5 11 (nil) [2 uses])
(note 51 50 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 5 (set (reg/v:SI 84 [ b ])
        (reg/v:SI 87 [ b ])) 75 {*movsi_internal}
     (nil))
(insn 53 52 54 5 (parallel [
            (set (reg/v:SI 87 [ b ])
                (plus:SI (reg/v:SI 87 [ b ])
                    (reg/v:SI 99 [ a ])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":23:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 99 [ a ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 56 5 (set (reg:SI 4 si)
        (reg/v:SI 87 [ b ])) "../fib.cpp":24:11 75 {*movsi_internal}
     (nil))
(insn 56 54 57 5 (set (reg:DI 5 di)
        (reg/f:DI 121)) "../fib.cpp":24:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 57 56 133 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":24:11 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 133 57 58 5 (set (reg:DI 125)
        (reg:DI 0 ax)) "../fib.cpp":24:11 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 58 133 59 5 (set (reg/f:DI 88 [ _15 ])
        (reg:DI 125)) "../fib.cpp":24:11 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(insn 59 58 60 5 (set (reg/f:DI 116 [ _15->_vptr.basic_ostream ])
        (mem/f:DI (reg/f:DI 88 [ _15 ]) [2 _15->_vptr.basic_ostream+0 S8 A64])) "/usr/include/c++/11/ostream":685:39 74 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 88 [ _15 ]) [2 _15->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn 60 59 61 5 (set (reg:DI 117 [ MEM[(long int *)_22 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 116 [ _15->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [7 MEM[(long int *)_22 + -24B]+0 S8 A64])) 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ _15->_vptr.basic_ostream ])
        (nil)))
(insn 61 60 62 5 (set (reg/f:DI 95 [ _30 ])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 88 [ _15 ])
                    (reg:DI 117 [ MEM[(long int *)_22 + -24B] ]))
                (const_int 240 [0xf0])) [19 MEM[(const struct __ctype_type * *)_25 + 240B]+0 S8 A64])) 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117 [ MEM[(long int *)_22 + -24B] ])
        (nil)))
(insn 62 61 63 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ _30 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/basic_ios.h":49:7 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 63 62 64 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "/usr/include/c++/11/bits/basic_ios.h":49:7 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 67)
(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 65 64 66 6 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7f497d673800 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/basic_ios.h":50:18 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7f497d673800 __throw_bad_cast>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
(barrier 66 65 67)
(code_label 67 66 68 7 12 (nil) [1 uses])
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 95 [ _30 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_30]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/locale_facets.h":877:2 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 70 69 71 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "/usr/include/c++/11/bits/locale_facets.h":877:2 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 75)
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 140 8 (set (reg:SI 83 [ prephitmp_2 ])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 95 [ _30 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_30]._M_widen[10]+0 S1 A8]))) "/usr/include/c++/11/ostream":685:19 153 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _30 ])
        (nil)))
(jump_insn 140 72 141 8 (set (pc)
        (label_ref 90)) "/usr/include/c++/11/bits/locale_facets.h":878:51 807 {jump}
     (nil)
 -> 90)
(barrier 141 140 75)
(code_label 75 141 76 9 13 (nil) [1 uses])
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 9 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _30 ])) "/usr/include/c++/11/bits/locale_facets.h":879:21 74 {*movdi_internal}
     (nil))
(call_insn 78 77 79 9 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7f497c525c00 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/locale_facets.h":879:21 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7f497c525c00 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 9 (set (reg/f:DI 118 [ MEM[(const struct ctype *)_30].D.38127._vptr.facet ])
        (mem/f:DI (reg/f:DI 95 [ _30 ]) [2 MEM[(const struct ctype *)_30].D.38127._vptr.facet+0 S8 A64])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 95 [ _30 ]) [2 MEM[(const struct ctype *)_30].D.38127._vptr.facet+0 S8 A64])
        (nil)))
(insn 80 79 8 9 (set (reg/f:DI 101 [ _41 ])
        (mem/f:DI (plus:DI (reg/f:DI 118 [ MEM[(const struct ctype *)_30].D.38127._vptr.facet ])
                (const_int 48 [0x30])) [23 MEM[(int (*) () *)_40 + 48B]+0 S8 A64])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ MEM[(const struct ctype *)_30].D.38127._vptr.facet ])
        (nil)))
(insn 8 80 82 9 (set (reg:SI 83 [ prephitmp_2 ])
        (const_int 10 [0xa])) "/usr/include/c++/11/bits/locale_facets.h":880:23 75 {*movsi_internal}
     (nil))
(insn 82 8 83 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ _41 ])
            (reg/f:DI 122))) 12 {*cmpdi_1}
     (expr_list:REG_EQUAL (compare:CCZ (reg/f:DI 101 [ _41 ])
            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>))
        (nil)))
(jump_insn 83 82 84 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 90)
            (pc))) 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 858993460 (nil)))
 -> 90)
(note 84 83 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 10 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "/usr/include/c++/11/bits/locale_facets.h":880:23 75 {*movsi_internal}
     (nil))
(insn 86 85 87 10 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _30 ])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _30 ])
        (nil)))
(call_insn 87 86 134 10 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 101 [ _41 ]) [0 *OBJ_TYPE_REF(_41;_30->6) S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/locale_facets.h":880:23 824 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _41 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 134 87 88 10 (set (reg:QI 126)
        (reg:QI 0 ax)) "/usr/include/c++/11/bits/locale_facets.h":880:23 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(note 88 134 89 10 NOTE_INSN_DELETED)
(insn 89 88 90 10 (set (reg:SI 83 [ prephitmp_2 ])
        (sign_extend:SI (reg:QI 126))) "/usr/include/c++/11/ostream":685:19 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 126)
        (nil)))
(code_label 90 89 91 11 14 (nil) [2 uses])
(note 91 90 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 11 (set (reg:SI 4 si)
        (reg:SI 83 [ prephitmp_2 ])) "/usr/include/c++/11/ostream":685:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ prephitmp_2 ])
        (nil)))
(insn 93 92 94 11 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _15 ])) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _15 ])
        (nil)))
(call_insn 94 93 135 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7f497bfa4500 put>) [0 put S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":685:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7f497bfa4500 put>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 135 94 95 11 (set (reg:DI 127)
        (reg:DI 0 ax)) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 95 135 96 11 (set (reg/f:DI 94 [ _28 ])
        (reg:DI 127)) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(insn 96 95 97 11 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _28 ])) "/usr/include/c++/11/ostream":707:24 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _28 ])
        (nil)))
(call_insn 97 96 98 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7f497bfa4800 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":707:24 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7f497bfa4800 flush>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 98 97 99 11 (parallel [
            (set (reg/v:SI 89 [ i ])
                (plus:SI (reg/v:SI 89 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":26:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 99 98 100 11 (set (reg/v:SI 99 [ a ])
        (reg/v:SI 84 [ b ])) 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 84 [ b ])
        (nil)))
(insn 100 99 101 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [12 n+0 S4 A32])
            (reg/v:SI 89 [ i ]))) "../fib.cpp":20:11 11 {*cmpsi_1}
     (nil))
(jump_insn 101 100 142 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) "../fib.cpp":20:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 50)
(note 142 101 143 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 143 142 144 12 (set (pc)
        (label_ref 102)) 807 {jump}
     (nil)
 -> 102)
(barrier 144 143 137)
(code_label 137 144 122 13 21 (nil) [1 uses])
(note 122 137 110 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 110 122 111 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f497bd71400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "../fib.cpp":28:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f497bd71400 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 111 110 112)
(code_label 112 111 123 14 16 (nil) [1 uses])
(note 123 112 113 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 113 123 114 14 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(insn 114 113 0 14 (use (reg/i:SI 0 ax)) "../fib.cpp":28:1 -1
     (nil))

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2302, decl_uid=49917, cgraph_uid=1036, symbol_order=1211) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
rescanning insn with uid = 14.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
Reg 82 uninteresting
Reg 83 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 82: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 83: (insn_list:REG_DEP_TRUE 8 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r83,l0) best DREG, allocno DREG
    a0 (r82,l0) best SIREG, allocno SIREG

  a0(r82,l0) costs: AREG:4000,4000 DREG:4000,4000 CREG:4000,4000 BREG:4000,4000 SIREG:1000,1000 DIREG:4000,4000 AD_REGS:4000,4000 CLOBBERED_REGS:4000,4000 Q_REGS:4000,4000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:4000,4000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:36000,36000 INT_SSE_REGS:36000,36000 ALL_REGS:528000,528000 MEM:17000,17000
  a1(r83,l0) costs: AREG:2000,2000 DREG:-1000,-1000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:23000,23000 INT_SSE_REGS:23000,23000 ALL_REGS:316000,316000 MEM:11000,11000


Pass 1 for finding pseudo/allocno costs

    r83: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:8000,8000 DREG:8000,8000 CREG:8000,8000 BREG:8000,8000 SIREG:4000,1000 DIREG:8000,8000 AD_REGS:8000,8000 CLOBBERED_REGS:4000,4000 Q_REGS:8000,8000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:4000,4000 GENERAL_REGS:4000,4000 SSE_FIRST_REG:30000,30000 NO_REX_SSE_REGS:30000,30000 SSE_REGS:30000,30000 MMX_REGS:65000,65000 INT_SSE_REGS:39000,39000 ALL_REGS:534000,534000 MEM:30000,30000
  a1(r83,l0) costs: AREG:4000,4000 DREG:2000,-1000 CREG:4000,4000 BREG:4000,4000 SIREG:4000,4000 DIREG:4000,4000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:4000,4000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:18000,18000 NO_REX_SSE_REGS:18000,18000 SSE_REGS:18000,18000 MMX_REGS:39000,39000 INT_SSE_REGS:26000,26000 ALL_REGS:322000,322000 MEM:18000,18000

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 11(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 5(l0): point = 14
 a0(r82): [5..14]
 a1(r83): [7..8]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r82): [0..1]
 a1(r83): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r82,l0) conflicts: a1(r83,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a1(r83,l0) conflicts: a0(r82,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  pref0:a1(r83)<-hr1@1500
  pref1:a0(r82)<-hr4@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r82 1r83
    modified regnos: 82 83
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@38000
          2:( 0 2-6 36-43)@52000
      Allocno a0r82 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, node:  0 2-6 36-43 (confl regs =  1 7-35 44-75)
      Allocno a1r83 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
      Pushing a1(r83,l0)(cost 0)
      Pushing a0(r82,l0)(cost 0)
      Popping a0(r82,l0)  --         assign reg 6
      Popping a1(r83,l0)  --         assign reg 1
Disposition:
    0:r82  l0     6    1:r83  l0     1
New iteration of spill/restore move
+++Costs: overall 3000, reg 3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,1u} r5={5d,2u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={1d,2u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,2u} r83={1d,1u} 
;;    total ref usage 175{159d,16u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 82)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f497c1043f0 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f497c1043f0 __ioinit>)
        (nil)))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg/f:DI 82)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f497c1043f0 __ioinit>)
        (nil)))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f497c3e2900 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/iostream":74:25 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f497c3e2900 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 83)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f497bc6f7e0 __dso_handle>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f497bc6f7e0 __dso_handle>)
        (nil)))
(insn 9 8 11 2 (set (reg:DI 1 dx)
        (reg/f:DI 83)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f497bc6f7e0 __dso_handle>)
            (nil))))
(insn 11 9 14 2 (set (reg:DI 4 si)
        (reg/f:DI 82)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f497c1043f0 __ioinit>)
            (nil))))
(insn 14 11 15 2 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f497c3e2b00 __dt_comp >)
                    ] UNSPEC_GOTPCREL)) [26  S8 A8])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f497c3e2b00 __dt_comp >)
        (nil)))
(call_insn/j 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f497bca9500 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/iostream":74:25 828 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f497bca9500 __cxa_atexit>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(barrier 16 15 0)
