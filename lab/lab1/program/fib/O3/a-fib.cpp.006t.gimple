int main ()
{
  int D.49919;

  {
    int a;
    int b;
    int i;
    int t;
    int n;

    try
      {
        a = 0;
        b = 1;
        i = 1;
        std::basic_istream<char>::operator>> (&cin, &n);
        _1 = std::operator<< <std::char_traits<char> > (&cout, "a=");
        _2 = std::basic_ostream<char>::operator<< (_1, a);
        std::basic_ostream<char>::operator<< (_2, endl);
        _3 = std::operator<< <std::char_traits<char> > (&cout, "X=");
        _4 = std::basic_ostream<char>::operator<< (_3, 10);
        std::basic_ostream<char>::operator<< (_4, endl);
        goto <D.45165>;
        <D.45166>:
        t = b;
        b = a + b;
        _5 = std::basic_ostream<char>::operator<< (&cout, b);
        std::basic_ostream<char>::operator<< (_5, endl);
        a = t;
        i = i + 1;
        <D.45165>:
        n.0_6 = n;
        if (i < n.0_6) goto <D.45166>; else goto <D.45164>;
        <D.45164>:
      }
    finally
      {
        n = {CLOBBER};
      }
  }
  D.49919 = 0;
  return D.49919;
}


struct basic_ostream & std::endl<char, std::char_traits<char> > (struct basic_ostream & __os)
{
  struct basic_ostream & D.49928;

  _1 = __os->_vptr.basic_ostream;
  _2 = _1 + 18446744073709551592;
  _3 = MEM[(long int *)_2];
  _4 = (sizetype) _3;
  _5 = __os + _4;
  _6 = std::basic_ios<char>::widen (_5, 10);
  _7 = (int) _6;
  _8 = std::basic_ostream<char>::put (__os, _7);
  D.49928 = std::flush<char, std::char_traits<char> > (_8);
  return D.49928;
}


char_type std::basic_ios<char>::widen (const struct basic_ios * const this, char __c)
{
  char_type D.49933;

  _1 = this->_M_ctype;
  _2 = std::__check_facet<std::ctype<char> > (_1);
  _3 = (int) __c;
  D.49933 = std::ctype<char>::widen (_2, _3);
  return D.49933;
}


const struct ctype & std::__check_facet<std::ctype<char> > (const struct ctype * __f)
{
  const struct ctype & D.49939;

  if (__f == 0B) goto <D.49937>; else goto <D.49938>;
  <D.49937>:
  std::__throw_bad_cast ();
  <D.49938>:
  D.49939 = __f;
  return D.49939;
}


char_type std::ctype<char>::widen (const struct ctype * const this, char __c)
{
  char_type D.49943;

  _1 = this->_M_widen_ok;
  if (_1 != 0) goto <D.49941>; else goto <D.49942>;
  <D.49941>:
  __c.1_2 = (unsigned char) __c;
  _3 = (int) __c.1_2;
  D.49943 = this->_M_widen[_3];
  // predicted unlikely by early return (on trees) predictor.
  return D.49943;
  <D.49942>:
  std::ctype<char>::_M_widen_init (this);
  _4 = this->D.38127._vptr.facet;
  _5 = _4 + 48;
  _6 = *_5;
  _7 = (int) __c;
  D.49943 = OBJ_TYPE_REF(_6;(const struct ctype)this->6) (this, _7);
  return D.49943;
}


char_type std::ctype<char>::do_widen (const struct ctype * const this, char __c)
{
  char_type D.49946;

  D.49946 = __c;
  return D.49946;
}


struct basic_ostream & std::flush<char, std::char_traits<char> > (struct basic_ostream & __os)
{
  struct basic_ostream & D.49948;

  D.49948 = std::basic_ostream<char>::flush (__os);
  return D.49948;
}


struct basic_ostream & std::operator<< <std::char_traits<char> > (struct basic_ostream & __out, const char * __s)
{
  struct basic_ostream & D.49954;

  if (__s == 0B) goto <D.49951>; else goto <D.49952>;
  <D.49951>:
  _1 = __out->_vptr.basic_ostream;
  _2 = _1 + 18446744073709551592;
  _3 = MEM[(long int *)_2];
  _4 = (sizetype) _3;
  _5 = __out + _4;
  std::basic_ios<char>::setstate (_5, 1);
  goto <D.49953>;
  <D.49952>:
  _6 = std::char_traits<char>::length (__s);
  _7 = (long int) _6;
  std::__ostream_insert<char, std::char_traits<char> > (__out, __s, _7);
  <D.49953>:
  D.49954 = __out;
  return D.49954;
}


void std::basic_ios<char>::setstate (struct basic_ios * const this, iostate __state)
{
  _1 = std::basic_ios<char>::rdstate (this);
  _2 = std::operator| (_1, __state);
  std::basic_ios<char>::clear (this, _2);
}


iostate std::basic_ios<char>::rdstate (const struct basic_ios * const this)
{
  iostate D.49958;

  D.49958 = this->D.41638._M_streambuf_state;
  return D.49958;
}


_Ios_Iostate std::operator| (_Ios_Iostate __a, _Ios_Iostate __b)
{
  _Ios_Iostate D.49960;

  D.49960 = __a | __b;
  return D.49960;
}


size_t std::char_traits<char>::length (const char_type * __s)
{
  bool retval.2;
  size_t D.49965;

  retval.2 = std::__constant_string_p<char> (__s);
  if (retval.2 != 0) goto <D.49963>; else goto <D.49964>;
  <D.49963>:
  D.49965 = __gnu_cxx::char_traits<char>::length (__s);
  return D.49965;
  <D.49964>:
  D.49965 = __builtin_strlen (__s);
  return D.49965;
}


__attribute__((always_inline))
bool std::__constant_string_p<char> (const char * __s)
{
  bool D.49968;

  D.49968 = 0;
  return D.49968;
}


size_t __gnu_cxx::char_traits<char>::length (const char_type * __p)
{
  bool retval.3;
  const char_type D.13543;
  size_t D.49971;
  size_t __i;

  __i = 0;
  goto <D.13555>;
  <D.13556>:
  __i = __i + 1;
  <D.13555>:
  D.13543 = 0;
  try
    {
      _1 = __p + __i;
      _2 = __gnu_cxx::char_traits<char>::eq (_1, &D.13543);
      retval.3 = ~_2;
    }
  finally
    {
      D.13543 = {CLOBBER};
    }
  if (retval.3 != 0) goto <D.13556>; else goto <D.13554>;
  <D.13554>:
  D.49971 = __i;
  return D.49971;
}


bool __gnu_cxx::char_traits<char>::eq (const char_type & __c1, const char_type & __c2)
{
  bool D.49973;

  _1 = *__c1;
  _2 = *__c2;
  D.49973 = _1 == _2;
  return D.49973;
}


struct __ostream_type & std::basic_ostream<char>::operator<< (struct basic_ostream * const this, struct __ostream_type & (*<T65bd>) (struct __ostream_type &) __pf)
{
  struct __ostream_type & D.49975;

  __pf.4_1 = __pf;
  D.49975 = __pf.4_1 (this);
  return D.49975;
}


void _GLOBAL__sub_I_main ()
{
  __static_initialization_and_destruction_0 (1, 65535);
}


void __static_initialization_and_destruction_0 (int __initialize_p, int __priority)
{
  if (__initialize_p == 1) goto <D.49978>; else goto <D.49979>;
  <D.49978>:
  if (__priority == 65535) goto <D.49980>; else goto <D.49981>;
  <D.49980>:
  std::ios_base::Init::Init (&__ioinit);
  __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
  goto <D.49982>;
  <D.49981>:
  <D.49982>:
  goto <D.49983>;
  <D.49979>:
  <D.49983>:
}


