
;; Function std::ctype<char>::do_widen (_ZNKSt5ctypeIcE8do_widenEc, funcdef_no=1565, decl_uid=38061, cgraph_uid=536, symbol_order=565)

scanning new insn with uid = 15.
rescanning insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


std::ctype<char>::do_widen

Dataflow summary:
def_info->table_size = 22, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r84={1d,1u} r85={1d,1u} r87={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(4){ }d5(5){ }d6(6){ }d7(7){ }d8(16){ }d9(19){ }d10(20){ }d11(21){ }d12(22){ }d13(23){ }d14(24){ }d15(25){ }d16(26){ }d17(27){ }d18(36){ }d19(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 84 85 87
;; live  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax] 84 85
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(6){ }u-1(7){ }u-1(19){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 13 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
  Adding insn 12 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 15 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 4 for    15: r87:SI=si:SI
      REG_DEAD si:SI
insn_cost 4 for     3: r85:SI=r87:SI
      REG_DEAD r87:SI
insn_cost 4 for     4: r84:QI=r85:SI#0
      REG_DEAD r85:SI
insn_cost 4 for    12: ax:QI=r84:QI
      REG_DEAD r84:QI
insn_cost 0 for    13: use ax:QI
allowing combination of insns 3 and 4
original costs 4 + 4 = 8
replacement cost 4
deferring deletion of insn with uid = 3.
modifying insn i3     4: r84:QI=r87:SI#0
      REG_DEAD r87:SI
deferring rescan insn with uid = 4.
starting the processing of deferred insns
rescanning insn with uid = 4.
ending the processing of deferred insns


std::ctype<char>::do_widen

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r84={1d,1u} r87={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
(note 6 0 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 15 6 3 2 (set (reg:SI 87)
        (reg:SI 4 si [ __c ])) "/usr/include/c++/11/bits/locale_facets.h":1087:7 -1
     (expr_list:REG_DEAD (reg:SI 4 si [ __c ])
        (nil)))
(note 3 15 4 2 NOTE_INSN_DELETED)
(insn 4 3 5 2 (set (reg/v:QI 84 [ __c ])
        (subreg:QI (reg:SI 87) 0)) "/usr/include/c++/11/bits/locale_facets.h":1087:7 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg/i:QI 0 ax)
        (reg/v:QI 84 [ __c ])) "/usr/include/c++/11/bits/locale_facets.h":1088:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:QI 84 [ __c ])
        (nil)))
(insn 13 12 0 2 (use (reg/i:QI 0 ax)) "/usr/include/c++/11/bits/locale_facets.h":1088:21 -1
     (nil))

;; Function std::endl.isra (_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0, funcdef_no=2306, decl_uid=50074, cgraph_uid=1057, symbol_order=1235)

scanning new insn with uid = 54.
rescanning insn with uid = 2.
scanning new insn with uid = 55.
rescanning insn with uid = 36.
scanning new insn with uid = 56.
rescanning insn with uid = 43.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)


std::endl.isra

Dataflow summary:
def_info->table_size = 375, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,2u} r1={6d} r2={6d} r4={8d,2u} r5={10d,5u} r6={1d,8u} r7={1d,13u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,7u} r17={8d,3u} r18={5d} r19={1d,8u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r86={1d,1u} r87={3d,1u} r88={1d,6u} r92={1d,2u,1e} r94={1d,1u} r95={1d,3u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} 
;;    total ref usage 448{378d,69u,1e} in 32{27 regular + 5 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d11(1){ }d17(2){ }d25(4){ }d35(5){ }d36(6){ }d37(7){ }d78(16){ }d92(19){ }d98(20){ }d104(21){ }d110(22){ }d116(23){ }d122(24){ }d128(25){ }d134(26){ }d140(27){ }d186(36){ }d192(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 88 95 96 97 100
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 17 [flags] 88 95 96 97
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 7 [sp] 16 [argp] 19 [frame]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
;; live  gen 	 87
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 95

( 4 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 87 92 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
;; live  gen 	 5 [di] 17 [flags] 87 92 98 99
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 88 92 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 88 92 95

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 92 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 87 94 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 92 95
;; live  gen 	 0 [ax] 4 [si] 5 [di] 87 94
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 95

( 5 6 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 86 102
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 95
;; live  gen 	 0 [ax] 4 [si] 5 [di] 86
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(6){ }u-1(7){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 13 to worklist
  Adding insn 18 to worklist
  Adding insn 31 to worklist
  Adding insn 26 to worklist
  Adding insn 35 to worklist
  Adding insn 45 to worklist
  Adding insn 42 to worklist
Finished finding needed instructions:
processing block 3 lr out =  7 [sp] 16 [argp] 19 [frame]
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame]
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 56 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 95
  Adding insn 20 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 95
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 55 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 88 92 95
  Adding insn 30 to worklist
  Adding insn 4 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
  Adding insn 17 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 88 95
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 2 to worklist
  Adding insn 54 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
insn_cost 4 for    54: r100:DI=di:DI
      REG_DEAD di:DI
insn_cost 4 for     2: r95:DI=r100:DI
      REG_DEAD r100:DI
insn_cost 4 for     7: r96:DI=[r95:DI]
insn_cost 8 for     8: r97:DI=[r96:DI-0x18]
      REG_DEAD r96:DI
insn_cost 9 for     9: r88:DI=[r95:DI+r97:DI+0xf0]
      REG_DEAD r97:DI
insn_cost 4 for    10: flags:CCZ=cmp(r88:DI,0)
insn_cost 13 for    11: pc={(flags:CCZ!=0)?L15:pc}
      REG_DEAD flags:CCZ
      REG_BR_PROB 1073312332
insn_cost 0 for    13: call [`_ZSt16__throw_bad_castv'] argc:0
      REG_CALL_DECL `_ZSt16__throw_bad_castv'
      REG_ARGS_SIZE 0
      REG_NORETURN 0
insn_cost 12 for    17: flags:CCZ=cmp([r88:DI+0x38],0)
insn_cost 13 for    18: pc={(flags:CCZ==0)?L23:pc}
      REG_DEAD flags:CCZ
      REG_BR_PROB 524845004
insn_cost 12 for    20: r87:SI=sign_extend([r88:DI+0x43])
      REG_DEAD r88:DI
insn_cost 4 for    25: di:DI=r88:DI
insn_cost 0 for    26: call [`_ZNKSt5ctypeIcE13_M_widen_initEv'] argc:0
      REG_DEAD di:DI
      REG_CALL_DECL `_ZNKSt5ctypeIcE13_M_widen_initEv'
insn_cost 4 for    27: r98:DI=[r88:DI]
insn_cost 8 for    28: r92:DI=[r98:DI+0x30]
      REG_DEAD r98:DI
insn_cost 1 for    29: r99:DI=`_ZNKSt5ctypeIcE8do_widenEc'
insn_cost 4 for     4: r87:SI=0xa
insn_cost 4 for    30: flags:CCZ=cmp(r92:DI,r99:DI)
      REG_DEAD r99:DI
      REG_EQUAL cmp(r92:DI,`_ZNKSt5ctypeIcE8do_widenEc')
insn_cost 13 for    31: pc={(flags:CCZ==0)?L38:pc}
      REG_DEAD flags:CCZ
      REG_BR_PROB 858993460
insn_cost 4 for    33: si:SI=0xa
insn_cost 4 for    34: di:DI=r88:DI
      REG_DEAD r88:DI
insn_cost 8 for    35: ax:QI=call [r92:DI] argc:0
      REG_DEAD r92:DI
      REG_DEAD di:DI
      REG_DEAD si:SI
      REG_CALL_DECL (nil)
insn_cost 4 for    55: r101:QI=ax:QI
      REG_DEAD ax:QI
insn_cost 4 for    36: r94:QI=r101:QI
      REG_DEAD r101:QI
insn_cost 4 for    37: r87:SI=sign_extend(r94:QI)
      REG_DEAD r94:QI
insn_cost 4 for    40: si:SI=r87:SI
      REG_DEAD r87:SI
insn_cost 4 for    41: di:DI=r95:DI
      REG_DEAD r95:DI
insn_cost 9 for    42: ax:DI=call [`_ZNSo3putEc'] argc:0
      REG_DEAD di:DI
      REG_DEAD si:SI
      REG_CALL_DECL `_ZNSo3putEc'
insn_cost 4 for    56: r102:DI=ax:DI
      REG_DEAD ax:DI
insn_cost 4 for    43: r86:DI=r102:DI
      REG_DEAD r102:DI
insn_cost 4 for    44: di:DI=r86:DI
      REG_DEAD r86:DI
insn_cost 9 for    45: ax:DI=call [`_ZNSo5flushEv'] argc:0
      REG_DEAD di:DI
      REG_UNUSED ax:DI
      REG_CALL_DECL `_ZNSo5flushEv'
allowing combination of insns 36 and 37
original costs 4 + 4 = 8
replacement cost 4
deferring deletion of insn with uid = 36.
modifying insn i3    37: r87:SI=sign_extend(r101:QI)
      REG_DEAD r101:QI
deferring rescan insn with uid = 37.
starting the processing of deferred insns
rescanning insn with uid = 37.
ending the processing of deferred insns


std::endl.isra

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,2u} r1={6d} r2={6d} r4={8d,2u} r5={10d,5u} r6={1d,8u} r7={1d,13u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,7u} r17={8d,3u} r18={5d} r19={1d,8u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r86={1d,1u} r87={3d,1u} r88={1d,6u} r92={1d,2u,1e} r95={1d,3u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} 
;;    total ref usage 446{377d,68u,1e} in 31{26 regular + 5 call} insns.
(note 5 0 54 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 54 5 2 2 (set (reg:DI 100)
        (reg:DI 5 di [ __os ])) "/usr/include/c++/11/ostream":684:5 -1
     (expr_list:REG_DEAD (reg:DI 5 di [ __os ])
        (nil)))
(insn 2 54 3 2 (set (reg/v/f:DI 95 [ __os ])
        (reg:DI 100)) "/usr/include/c++/11/ostream":684:5 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg/f:DI 96 [ __os_1(D)->_vptr.basic_ostream ])
        (mem/f:DI (reg/v/f:DI 95 [ __os ]) [2 __os_1(D)->_vptr.basic_ostream+0 S8 A64])) "/usr/include/c++/11/ostream":685:39 74 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 97 [ MEM[(long int *)_2 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 96 [ __os_1(D)->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [7 MEM[(long int *)_2 + -24B]+0 S8 A64])) 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ __os_1(D)->_vptr.basic_ostream ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _14 ])
        (mem/f:DI (plus:DI (plus:DI (reg/v/f:DI 95 [ __os ])
                    (reg:DI 97 [ MEM[(long int *)_2 + -24B] ]))
                (const_int 240 [0xf0])) [19 MEM[(const struct __ctype_type * *)_5 + 240B]+0 S8 A64])) 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97 [ MEM[(long int *)_2 + -24B] ])
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _14 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/basic_ios.h":49:7 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "/usr/include/c++/11/bits/basic_ios.h":49:7 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 15)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 12 15 3 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7f497d673800 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/basic_ios.h":50:18 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7f497d673800 __throw_bad_cast>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
(code_label 15 13 16 4 4 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 88 [ _14 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_14]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/locale_facets.h":877:2 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "/usr/include/c++/11/bits/locale_facets.h":877:2 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 23)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 23 5 (set (reg:SI 87 [ _9 ])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 88 [ _14 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_14]._M_widen[10]+0 S1 A8]))) "/usr/include/c++/11/ostream":685:19 153 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _14 ])
        (nil)))
      ; pc falls through to BB 8
(code_label 23 20 24 6 5 (nil) [1 uses])
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _14 ])) "/usr/include/c++/11/bits/locale_facets.h":879:21 74 {*movdi_internal}
     (nil))
(call_insn 26 25 27 6 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7f497c525c00 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/locale_facets.h":879:21 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7f497c525c00 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 6 (set (reg/f:DI 98 [ MEM[(const struct ctype *)_14].D.38127._vptr.facet ])
        (mem/f:DI (reg/f:DI 88 [ _14 ]) [2 MEM[(const struct ctype *)_14].D.38127._vptr.facet+0 S8 A64])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (nil))
(insn 28 27 29 6 (set (reg/f:DI 92 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 98 [ MEM[(const struct ctype *)_14].D.38127._vptr.facet ])
                (const_int 48 [0x30])) [23 MEM[(int (*) () *)_24 + 48B]+0 S8 A64])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ MEM[(const struct ctype *)_14].D.38127._vptr.facet ])
        (nil)))
(insn 29 28 4 6 (set (reg/f:DI 99)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>)) 74 {*movdi_internal}
     (nil))
(insn 4 29 30 6 (set (reg:SI 87 [ _9 ])
        (const_int 10 [0xa])) "/usr/include/c++/11/bits/locale_facets.h":880:23 75 {*movsi_internal}
     (nil))
(insn 30 4 31 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ _25 ])
            (reg/f:DI 99))) 12 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_EQUAL (compare:CCZ (reg/f:DI 92 [ _25 ])
                (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>))
            (nil))))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 38)
            (pc))) 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 858993460 (nil)))
 -> 38)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "/usr/include/c++/11/bits/locale_facets.h":880:23 75 {*movsi_internal}
     (nil))
(insn 34 33 35 7 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _14 ])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _14 ])
        (nil)))
(call_insn 35 34 55 7 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 92 [ _25 ]) [0 *OBJ_TYPE_REF(_25;_14->6) S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/locale_facets.h":880:23 824 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _25 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 55 35 36 7 (set (reg:QI 101)
        (reg:QI 0 ax)) "/usr/include/c++/11/bits/locale_facets.h":880:23 -1
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(note 36 55 37 7 NOTE_INSN_DELETED)
(insn 37 36 38 7 (set (reg:SI 87 [ _9 ])
        (sign_extend:SI (reg:QI 101))) "/usr/include/c++/11/ostream":685:19 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 101)
        (nil)))
(code_label 38 37 39 8 6 (nil) [1 uses])
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg:SI 4 si)
        (reg:SI 87 [ _9 ])) "/usr/include/c++/11/ostream":685:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ _9 ])
        (nil)))
(insn 41 40 42 8 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ __os ])) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ __os ])
        (nil)))
(call_insn 42 41 56 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7f497bfa4500 put>) [0 put S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":685:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7f497bfa4500 put>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 56 42 43 8 (set (reg:DI 102)
        (reg:DI 0 ax)) "/usr/include/c++/11/ostream":685:19 -1
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 43 56 44 8 (set (reg/f:DI 86 [ _8 ])
        (reg:DI 102)) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 44 43 45 8 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _8 ])) "/usr/include/c++/11/ostream":707:24 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ _8 ])
        (nil)))
(call_insn/j 45 44 0 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7f497bfa4800 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":707:24 828 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7f497bfa4800 flush>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Function main (main, funcdef_no=1812, decl_uid=45098, cgraph_uid=546, symbol_order=576) (executed once)

scanning new insn with uid = 131.
rescanning insn with uid = 26.
scanning new insn with uid = 132.
rescanning insn with uid = 39.
scanning new insn with uid = 133.
rescanning insn with uid = 58.
scanning new insn with uid = 134.
rescanning insn with uid = 88.
scanning new insn with uid = 135.
rescanning insn with uid = 95.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 17 count 19 (  1.4)


main

Dataflow summary:
def_info->table_size = 1016, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={16d,7u} r1={17d,2u} r2={15d} r4={23d,8u} r5={27d,12u} r6={1d,13u} r7={1d,27u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={1d,12u} r17={24d,6u} r18={14d} r19={1d,18u,1e} r20={15d} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={15d} r37={15d} r38={14d} r39={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r83={3d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={2d,3u} r88={1d,3u} r89={2d,2u} r94={1d,1u} r95={1d,6u} r99={2d,1u} r101={1d,2u,1e} r103={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r111={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r121={1d,5u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} 
;;    total ref usage 1169{1021d,146u,2e} in 82{68 regular + 14 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d15(0){ }d32(1){ }d47(2){ }d70(4){ }d97(5){ }d98(6){ }d99(7){ }d212(16){ }d251(19){ }d266(20){ }d281(21){ }d296(22){ }d311(23){ }d326(24){ }d341(25){ }d356(26){ }d371(27){ }d498(36){ }d513(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 87 89 99 106 107 108 111 121 123 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 85 86 87 89 99 106 107 108 111 121
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 122
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121
;; live  gen 	 122
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121 122

( 2 11 )->[4]->( 13 12 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 11 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 99 121
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 84 87 88 95 116 117 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121 122
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 84 87 88 95 116 117
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122

( 5 )->[6]->( )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 7 [sp] 16 [argp] 19 [frame]

( 5 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122

( 7 )->[8]->( 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
;; live  gen 	 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 121 122

( 7 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 122
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 101 118
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
;; live  gen 	 5 [di] 17 [flags] 83 101 118
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 95 101 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 95 101 121 122

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 101 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 95 101
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 103 126
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 101 121 122
;; live  gen 	 0 [ax] 4 [si] 5 [di] 83 103
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 121 122

( 8 9 10 )->[11]->( 5 4 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 88 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 89 94 99 127
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 121 122
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 89 94 99
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121 122

( 4 )->[12]->( )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 7 [sp] 16 [argp] 19 [frame]

( 4 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(6){ }u-1(7){ }u-1(19){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 45 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 21 to worklist
  Adding insn 15 to worklist
  Adding insn 4 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 63 to worklist
  Adding insn 57 to worklist
  Adding insn 65 to worklist
  Adding insn 70 to worklist
  Adding insn 83 to worklist
  Adding insn 78 to worklist
  Adding insn 87 to worklist
  Adding insn 101 to worklist
  Adding insn 97 to worklist
  Adding insn 94 to worklist
  Adding insn 110 to worklist
  Adding insn 114 to worklist
Finished finding needed instructions:
processing block 6 lr out =  7 [sp] 16 [argp] 19 [frame]
processing block 13 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
  Adding insn 113 to worklist
processing block 12 lr out =  7 [sp] 16 [argp] 19 [frame]
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame]
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121 122
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 98 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 135 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 121 122
  Adding insn 72 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 121 122
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 134 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 87 88 89 95 101 121 122
  Adding insn 82 to worklist
  Adding insn 8 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
  Adding insn 69 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 84 87 88 89 95 121 122
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 133 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121 122
  Adding insn 81 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 19 [frame] 87 89 99 121
  Adding insn 44 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 132 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 131 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 17 count 15 (  1.1)
insn_cost 0 for     4: {[frame:DI-0x8]=unspec[[0x28]] 79;scratch=0;clobber flags:CC;}
      REG_UNUSED flags:CC
insn_cost 4 for    11: {r106:DI=frame:DI-0xc;clobber flags:CC;}
      REG_UNUSED flags:CC
insn_cost 4 for    12: si:DI=r106:DI
      REG_DEAD r106:DI
      REG_EQUAL frame:DI-0xc
insn_cost 1 for    13: r107:DI=`_ZSt3cin'
insn_cost 4 for    14: di:DI=r107:DI
      REG_DEAD r107:DI
      REG_EQUAL `_ZSt3cin'
insn_cost 9 for    15: ax:DI=call [`_ZNSirsERi'] argc:0
      REG_DEAD di:DI
      REG_DEAD si:DI
      REG_UNUSED ax:DI
      REG_CALL_DECL `_ZNSirsERi'
insn_cost 4 for    16: dx:DI=0x2
insn_cost 1 for    17: r108:DI=`*.LC0'
insn_cost 4 for    18: si:DI=r108:DI
      REG_DEAD r108:DI
      REG_EQUAL `*.LC0'
insn_cost 1 for    19: r121:DI=`_ZSt4cout'
insn_cost 4 for    20: di:DI=r121:DI
      REG_EQUAL `_ZSt4cout'
insn_cost 9 for    21: ax:DI=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l'] argc:0
      REG_DEAD di:DI
      REG_DEAD si:DI
      REG_DEAD dx:DI
      REG_UNUSED ax:DI
      REG_CALL_DECL `_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l'
insn_cost 4 for    22: si:SI=0
insn_cost 4 for    24: di:DI=r121:DI
      REG_EQUAL `_ZSt4cout'
insn_cost 9 for    25: ax:DI=call [`_ZNSolsEi'] argc:0
      REG_DEAD di:DI
      REG_DEAD si:SI
      REG_CALL_DECL `_ZNSolsEi'
insn_cost 4 for   131: r123:DI=ax:DI
      REG_DEAD ax:DI
insn_cost 4 for    26: r85:DI=r123:DI
      REG_DEAD r123:DI
insn_cost 4 for    27: di:DI=r85:DI
      REG_DEAD r85:DI
insn_cost 0 for    28: call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'] argc:0
      REG_DEAD di:DI
      REG_CALL_DECL `_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'
insn_cost 4 for    29: dx:DI=0x2
insn_cost 1 for    30: r111:DI=`*.LC1'
insn_cost 4 for    31: si:DI=r111:DI
      REG_DEAD r111:DI
      REG_EQUAL `*.LC1'
insn_cost 4 for    33: di:DI=r121:DI
      REG_EQUAL `_ZSt4cout'
insn_cost 9 for    34: ax:DI=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l'] argc:0
      REG_DEAD di:DI
      REG_DEAD si:DI
      REG_DEAD dx:DI
      REG_UNUSED ax:DI
      REG_CALL_DECL `_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l'
insn_cost 4 for    35: si:SI=0xa
insn_cost 4 for    37: di:DI=r121:DI
      REG_EQUAL `_ZSt4cout'
insn_cost 9 for    38: ax:DI=call [`_ZNSolsEi'] argc:0
      REG_DEAD di:DI
      REG_DEAD si:SI
      REG_CALL_DECL `_ZNSolsEi'
insn_cost 4 for   132: r124:DI=ax:DI
      REG_DEAD ax:DI
insn_cost 4 for    39: r86:DI=r124:DI
      REG_DEAD r124:DI
insn_cost 4 for    40: di:DI=r86:DI
      REG_DEAD r86:DI
insn_cost 0 for    41: call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'] argc:0
      REG_DEAD di:DI
      REG_CALL_DECL `_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'
insn_cost 4 for     5: r89:SI=0x1
insn_cost 4 for     6: r87:SI=0x1
insn_cost 4 for     7: r99:SI=0
insn_cost 12 for    44: flags:CCGC=cmp([frame:DI-0xc],0x1)
insn_cost 13 for    45: pc={(flags:CCGC>0)?L127:pc}
      REG_DEAD flags:CCGC
      REG_BR_PROB 955630228
insn_cost 1 for    81: r122:DI=`_ZNKSt5ctypeIcE8do_widenEc'
insn_cost 16 for   108: {flags:CCZ=unspec[[frame:DI-0x8],[0x28]] 80;clobber scratch;}
insn_cost 13 for   109: pc={(flags:CCZ==0)?L112:pc}
      REG_DEAD flags:CCZ
      REG_BR_PROB 1073312332
insn_cost 4 for    52: r84:SI=r87:SI
insn_cost 4 for    53: {r87:SI=r87:SI+r99:SI;clobber flags:CC;}
      REG_DEAD r99:SI
      REG_UNUSED flags:CC
insn_cost 4 for    54: si:SI=r87:SI
insn_cost 4 for    56: di:DI=r121:DI
      REG_EQUAL `_ZSt4cout'
insn_cost 9 for    57: ax:DI=call [`_ZNSolsEi'] argc:0
      REG_DEAD di:DI
      REG_DEAD si:SI
      REG_CALL_DECL `_ZNSolsEi'
insn_cost 4 for   133: r125:DI=ax:DI
      REG_DEAD ax:DI
insn_cost 4 for    58: r88:DI=r125:DI
      REG_DEAD r125:DI
insn_cost 4 for    59: r116:DI=[r88:DI]
insn_cost 8 for    60: r117:DI=[r116:DI-0x18]
      REG_DEAD r116:DI
insn_cost 9 for    61: r95:DI=[r88:DI+r117:DI+0xf0]
      REG_DEAD r117:DI
insn_cost 4 for    62: flags:CCZ=cmp(r95:DI,0)
insn_cost 13 for    63: pc={(flags:CCZ!=0)?L67:pc}
      REG_DEAD flags:CCZ
      REG_BR_PROB 1073312332
insn_cost 0 for    65: call [`_ZSt16__throw_bad_castv'] argc:0
      REG_CALL_DECL `_ZSt16__throw_bad_castv'
      REG_ARGS_SIZE 0
      REG_NORETURN 0
insn_cost 12 for    69: flags:CCZ=cmp([r95:DI+0x38],0)
insn_cost 13 for    70: pc={(flags:CCZ==0)?L75:pc}
      REG_DEAD flags:CCZ
      REG_BR_PROB 524845004
insn_cost 12 for    72: r83:SI=sign_extend([r95:DI+0x43])
      REG_DEAD r95:DI
insn_cost 4 for    77: di:DI=r95:DI
insn_cost 0 for    78: call [`_ZNKSt5ctypeIcE13_M_widen_initEv'] argc:0
      REG_DEAD di:DI
      REG_CALL_DECL `_ZNKSt5ctypeIcE13_M_widen_initEv'
insn_cost 4 for    79: r118:DI=[r95:DI]
insn_cost 8 for    80: r101:DI=[r118:DI+0x30]
      REG_DEAD r118:DI
insn_cost 4 for     8: r83:SI=0xa
insn_cost 4 for    82: flags:CCZ=cmp(r101:DI,r122:DI)
      REG_EQUAL cmp(r101:DI,`_ZNKSt5ctypeIcE8do_widenEc')
insn_cost 13 for    83: pc={(flags:CCZ==0)?L90:pc}
      REG_DEAD flags:CCZ
      REG_BR_PROB 858993460
insn_cost 4 for    85: si:SI=0xa
insn_cost 4 for    86: di:DI=r95:DI
      REG_DEAD r95:DI
insn_cost 8 for    87: ax:QI=call [r101:DI] argc:0
      REG_DEAD r101:DI
      REG_DEAD di:DI
      REG_DEAD si:SI
      REG_CALL_DECL (nil)
insn_cost 4 for   134: r126:QI=ax:QI
      REG_DEAD ax:QI
insn_cost 4 for    88: r103:QI=r126:QI
      REG_DEAD r126:QI
insn_cost 4 for    89: r83:SI=sign_extend(r103:QI)
      REG_DEAD r103:QI
insn_cost 4 for    92: si:SI=r83:SI
      REG_DEAD r83:SI
insn_cost 4 for    93: di:DI=r88:DI
      REG_DEAD r88:DI
insn_cost 9 for    94: ax:DI=call [`_ZNSo3putEc'] argc:0
      REG_DEAD di:DI
      REG_DEAD si:SI
      REG_CALL_DECL `_ZNSo3putEc'
insn_cost 4 for   135: r127:DI=ax:DI
      REG_DEAD ax:DI
insn_cost 4 for    95: r94:DI=r127:DI
      REG_DEAD r127:DI
insn_cost 4 for    96: di:DI=r94:DI
      REG_DEAD r94:DI
insn_cost 9 for    97: ax:DI=call [`_ZNSo5flushEv'] argc:0
      REG_DEAD di:DI
      REG_UNUSED ax:DI
      REG_CALL_DECL `_ZNSo5flushEv'
insn_cost 4 for    98: {r89:SI=r89:SI+0x1;clobber flags:CC;}
      REG_UNUSED flags:CC
insn_cost 4 for    99: r99:SI=r84:SI
      REG_DEAD r84:SI
insn_cost 12 for   100: flags:CCGC=cmp([frame:DI-0xc],r89:SI)
insn_cost 13 for   101: pc={(flags:CCGC>0)?L50:pc}
      REG_DEAD flags:CCGC
      REG_BR_PROB 955630228
insn_cost 0 for   110: call [`__stack_chk_fail'] argc:0
      REG_CALL_DECL `__stack_chk_fail'
      REG_ARGS_SIZE 0
      REG_NORETURN 0
      REG_EH_REGION 0
insn_cost 4 for   113: ax:SI=0
insn_cost 0 for   114: use ax:SI
allowing combination of insns 88 and 89
original costs 4 + 4 = 8
replacement cost 4
deferring deletion of insn with uid = 88.
modifying insn i3    89: r83:SI=sign_extend(r126:QI)
      REG_DEAD r126:QI
deferring rescan insn with uid = 89.
starting the processing of deferred insns
rescanning insn with uid = 89.
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={16d,7u} r1={17d,2u} r2={15d} r4={23d,8u} r5={27d,12u} r6={1d,13u} r7={1d,27u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={1d,12u} r17={24d,6u} r18={14d} r19={1d,18u,1e} r20={15d} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={15d} r37={15d} r38={14d} r39={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r83={3d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={2d,3u} r88={1d,3u} r89={2d,2u} r94={1d,1u} r95={1d,6u} r99={2d,1u} r101={1d,2u,1e} r106={1d,1u} r107={1d,1u} r108={1d,1u} r111={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r121={1d,5u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} 
;;    total ref usage 1167{1020d,145u,2e} in 81{67 regular + 14 call} insns.
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [11 D.50135+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":7:1 1159 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 4 12 2 (parallel [
            (set (reg/f:DI 106)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":13:9 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/f:DI 106)) "../fib.cpp":13:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 13 12 14 2 (set (reg/f:DI 107)
        (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f497c104ab0 cin>)) "../fib.cpp":13:9 74 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/f:DI 107)) "../fib.cpp":13:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f497c104ab0 cin>)
            (nil))))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f497c02d400 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) "../fib.cpp":13:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f497c02d400 operator>>>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (const_int 2 [0x2])) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 108)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f497bd65750 *.LC0>)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/f:DI 108)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f497bd65750 *.LC0>)
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 121)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 121)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7f497d24c600 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":616:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7f497d24c600 __ostream_insert>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 22 21 24 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "../fib.cpp":15:18 75 {*movsi_internal}
     (nil))
(insn 24 22 25 2 (set (reg:DI 5 di)
        (reg/f:DI 121)) "../fib.cpp":15:18 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 25 24 131 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":15:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 131 25 26 2 (set (reg:DI 123)
        (reg:DI 0 ax)) "../fib.cpp":15:18 -1
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 26 131 27 2 (set (reg/f:DI 85 [ _9 ])
        (reg:DI 123)) "../fib.cpp":15:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _9 ])) "/usr/include/c++/11/ostream":113:13 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _9 ])
        (nil)))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x7f497bd34700 endl.isra>) [0 endl.isra S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ostream":113:13 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x7f497bd34700 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (const_int 2 [0x2])) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg/f:DI 111)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f497bd657e0 *.LC1>)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (nil))
(insn 31 30 33 2 (set (reg:DI 4 si)
        (reg/f:DI 111)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f497bd657e0 *.LC1>)
            (nil))))
(insn 33 31 34 2 (set (reg:DI 5 di)
        (reg/f:DI 121)) "/usr/include/c++/11/ostream":616:18 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 34 33 35 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7f497d24c600 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":616:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7f497d24c600 __ostream_insert>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 37 2 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "../fib.cpp":19:18 75 {*movsi_internal}
     (nil))
(insn 37 35 38 2 (set (reg:DI 5 di)
        (reg/f:DI 121)) "../fib.cpp":19:18 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 38 37 132 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":19:18 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 132 38 39 2 (set (reg:DI 124)
        (reg:DI 0 ax)) "../fib.cpp":19:18 -1
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 39 132 40 2 (set (reg/f:DI 86 [ _11 ])
        (reg:DI 124)) "../fib.cpp":19:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _11 ])) "/usr/include/c++/11/ostream":113:13 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ _11 ])
        (nil)))
(call_insn 41 40 5 2 (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x7f497bd34700 endl.isra>) [0 endl.isra S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/ostream":113:13 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x7f497bd34700 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 5 41 6 2 (set (reg/v:SI 89 [ i ])
        (const_int 1 [0x1])) "../fib.cpp":12:4 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 87 [ b ])
        (const_int 1 [0x1])) "../fib.cpp":11:4 75 {*movsi_internal}
     (nil))
(insn 7 6 44 2 (set (reg/v:SI 99 [ a ])
        (const_int 0 [0])) "../fib.cpp":10:4 75 {*movsi_internal}
     (nil))
(insn 44 7 45 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [12 n+0 S4 A32])
            (const_int 1 [0x1]))) "../fib.cpp":20:11 11 {*cmpsi_1}
     (nil))
(jump_insn 45 44 127 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 127)
            (pc))) "../fib.cpp":20:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 127)
      ; pc falls through to BB 4
(code_label 127 45 126 3 19 (nil) [1 uses])
(note 126 127 81 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 81 126 102 3 (set (reg/f:DI 122)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>)) 74 {*movdi_internal}
     (nil))
      ; pc falls through to BB 5
(code_label 102 81 46 4 15 (nil) [0 uses])
(note 46 102 108 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 108 46 109 4 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [11 D.50135+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [7 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "../fib.cpp":28:1 1164 {stack_protect_test_1_di}
     (nil))
(jump_insn 109 108 50 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "../fib.cpp":28:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 112)
      ; pc falls through to BB 12
(code_label 50 109 51 5 11 (nil) [1 uses])
(note 51 50 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 5 (set (reg/v:SI 84 [ b ])
        (reg/v:SI 87 [ b ])) 75 {*movsi_internal}
     (nil))
(insn 53 52 54 5 (parallel [
            (set (reg/v:SI 87 [ b ])
                (plus:SI (reg/v:SI 87 [ b ])
                    (reg/v:SI 99 [ a ])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":23:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 99 [ a ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 56 5 (set (reg:SI 4 si)
        (reg/v:SI 87 [ b ])) "../fib.cpp":24:11 75 {*movsi_internal}
     (nil))
(insn 56 54 57 5 (set (reg:DI 5 di)
        (reg/f:DI 121)) "../fib.cpp":24:11 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f497c104b40 cout>)
        (nil)))
(call_insn 57 56 133 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "../fib.cpp":24:11 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f497bf96b00 operator<<>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 133 57 58 5 (set (reg:DI 125)
        (reg:DI 0 ax)) "../fib.cpp":24:11 -1
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 58 133 59 5 (set (reg/f:DI 88 [ _15 ])
        (reg:DI 125)) "../fib.cpp":24:11 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(insn 59 58 60 5 (set (reg/f:DI 116 [ _15->_vptr.basic_ostream ])
        (mem/f:DI (reg/f:DI 88 [ _15 ]) [2 _15->_vptr.basic_ostream+0 S8 A64])) "/usr/include/c++/11/ostream":685:39 74 {*movdi_internal}
     (nil))
(insn 60 59 61 5 (set (reg:DI 117 [ MEM[(long int *)_22 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 116 [ _15->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [7 MEM[(long int *)_22 + -24B]+0 S8 A64])) 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ _15->_vptr.basic_ostream ])
        (nil)))
(insn 61 60 62 5 (set (reg/f:DI 95 [ _30 ])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 88 [ _15 ])
                    (reg:DI 117 [ MEM[(long int *)_22 + -24B] ]))
                (const_int 240 [0xf0])) [19 MEM[(const struct __ctype_type * *)_25 + 240B]+0 S8 A64])) 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117 [ MEM[(long int *)_22 + -24B] ])
        (nil)))
(insn 62 61 63 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ _30 ])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/basic_ios.h":49:7 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 63 62 64 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "/usr/include/c++/11/bits/basic_ios.h":49:7 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 67)
(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 65 64 67 6 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7f497d673800 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/basic_ios.h":50:18 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7f497d673800 __throw_bad_cast>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
(code_label 67 65 68 7 12 (nil) [1 uses])
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 95 [ _30 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_30]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/locale_facets.h":877:2 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 70 69 71 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "/usr/include/c++/11/bits/locale_facets.h":877:2 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 75)
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 75 8 (set (reg:SI 83 [ prephitmp_2 ])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 95 [ _30 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_30]._M_widen[10]+0 S1 A8]))) "/usr/include/c++/11/ostream":685:19 153 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _30 ])
        (nil)))
      ; pc falls through to BB 11
(code_label 75 72 76 9 13 (nil) [1 uses])
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 9 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _30 ])) "/usr/include/c++/11/bits/locale_facets.h":879:21 74 {*movdi_internal}
     (nil))
(call_insn 78 77 79 9 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7f497c525c00 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/bits/locale_facets.h":879:21 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7f497c525c00 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 9 (set (reg/f:DI 118 [ MEM[(const struct ctype *)_30].D.38127._vptr.facet ])
        (mem/f:DI (reg/f:DI 95 [ _30 ]) [2 MEM[(const struct ctype *)_30].D.38127._vptr.facet+0 S8 A64])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (nil))
(insn 80 79 8 9 (set (reg/f:DI 101 [ _41 ])
        (mem/f:DI (plus:DI (reg/f:DI 118 [ MEM[(const struct ctype *)_30].D.38127._vptr.facet ])
                (const_int 48 [0x30])) [23 MEM[(int (*) () *)_40 + 48B]+0 S8 A64])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ MEM[(const struct ctype *)_30].D.38127._vptr.facet ])
        (nil)))
(insn 8 80 82 9 (set (reg:SI 83 [ prephitmp_2 ])
        (const_int 10 [0xa])) "/usr/include/c++/11/bits/locale_facets.h":880:23 75 {*movsi_internal}
     (nil))
(insn 82 8 83 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ _41 ])
            (reg/f:DI 122))) 12 {*cmpdi_1}
     (expr_list:REG_EQUAL (compare:CCZ (reg/f:DI 101 [ _41 ])
            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x7f497c525700 do_widen>))
        (nil)))
(jump_insn 83 82 84 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 90)
            (pc))) 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 858993460 (nil)))
 -> 90)
(note 84 83 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 10 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "/usr/include/c++/11/bits/locale_facets.h":880:23 75 {*movsi_internal}
     (nil))
(insn 86 85 87 10 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _30 ])) "/usr/include/c++/11/bits/locale_facets.h":880:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _30 ])
        (nil)))
(call_insn 87 86 134 10 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 101 [ _41 ]) [0 *OBJ_TYPE_REF(_41;_30->6) S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/bits/locale_facets.h":880:23 824 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _41 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 134 87 88 10 (set (reg:QI 126)
        (reg:QI 0 ax)) "/usr/include/c++/11/bits/locale_facets.h":880:23 -1
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(note 88 134 89 10 NOTE_INSN_DELETED)
(insn 89 88 90 10 (set (reg:SI 83 [ prephitmp_2 ])
        (sign_extend:SI (reg:QI 126))) "/usr/include/c++/11/ostream":685:19 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 126)
        (nil)))
(code_label 90 89 91 11 14 (nil) [1 uses])
(note 91 90 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 11 (set (reg:SI 4 si)
        (reg:SI 83 [ prephitmp_2 ])) "/usr/include/c++/11/ostream":685:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ prephitmp_2 ])
        (nil)))
(insn 93 92 94 11 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _15 ])) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _15 ])
        (nil)))
(call_insn 94 93 135 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7f497bfa4500 put>) [0 put S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":685:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7f497bfa4500 put>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 135 94 95 11 (set (reg:DI 127)
        (reg:DI 0 ax)) "/usr/include/c++/11/ostream":685:19 -1
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 95 135 96 11 (set (reg/f:DI 94 [ _28 ])
        (reg:DI 127)) "/usr/include/c++/11/ostream":685:19 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(insn 96 95 97 11 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _28 ])) "/usr/include/c++/11/ostream":707:24 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _28 ])
        (nil)))
(call_insn 97 96 98 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7f497bfa4800 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/ostream":707:24 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7f497bfa4800 flush>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 98 97 99 11 (parallel [
            (set (reg/v:SI 89 [ i ])
                (plus:SI (reg/v:SI 89 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../fib.cpp":26:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 99 98 100 11 (set (reg/v:SI 99 [ a ])
        (reg/v:SI 84 [ b ])) 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 84 [ b ])
        (nil)))
(insn 100 99 101 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [12 n+0 S4 A32])
            (reg/v:SI 89 [ i ]))) "../fib.cpp":20:11 11 {*cmpsi_1}
     (nil))
(jump_insn 101 100 122 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) "../fib.cpp":20:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 50)
      ; pc falls through to BB 4
(note 122 101 110 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 110 122 112 12 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f497bd71400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "../fib.cpp":28:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f497bd71400 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(code_label 112 110 123 13 16 (nil) [1 uses])
(note 123 112 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 113 123 114 13 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "../fib.cpp":28:1 75 {*movsi_internal}
     (nil))
(insn 114 113 0 13 (use (reg/i:SI 0 ax)) "../fib.cpp":28:1 -1
     (nil))

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2302, decl_uid=49917, cgraph_uid=1036, symbol_order=1211) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 1 for     5: r82:DI=`_ZStL8__ioinit'
insn_cost 4 for     6: di:DI=r82:DI
      REG_EQUAL `_ZStL8__ioinit'
insn_cost 0 for     7: call [`_ZNSt8ios_base4InitC1Ev'] argc:0
      REG_DEAD di:DI
      REG_CALL_DECL `_ZNSt8ios_base4InitC1Ev'
insn_cost 1 for     8: r83:DI=`__dso_handle'
insn_cost 4 for     9: dx:DI=r83:DI
      REG_DEAD r83:DI
      REG_EQUAL `__dso_handle'
insn_cost 4 for    11: si:DI=r82:DI
      REG_DEAD r82:DI
      REG_EQUAL `_ZStL8__ioinit'
insn_cost 4 for    12: r86:DI=[const(unspec[`_ZNSt8ios_base4InitD1Ev'] 2)]
insn_cost 4 for    14: di:DI=r86:DI
      REG_DEAD r86:DI
      REG_EQUAL `_ZNSt8ios_base4InitD1Ev'
insn_cost 9 for    15: ax:SI=call [`__cxa_atexit'] argc:0
      REG_DEAD di:DI
      REG_DEAD si:DI
      REG_DEAD dx:DI
      REG_UNUSED ax:SI
      REG_CALL_DECL `__cxa_atexit'
      REG_EH_REGION 0
starting the processing of deferred insns
ending the processing of deferred insns


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,1u} r5={5d,2u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={1d,2u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,2u} r83={1d,1u} r86={1d,1u} 
;;    total ref usage 177{160d,17u,0e} in 9{7 regular + 2 call} insns.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 82)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f497c1043f0 __ioinit>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg/f:DI 82)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f497c1043f0 __ioinit>)
        (nil)))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f497c3e2900 __ct_comp >) [0 __ct_comp  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/11/iostream":74:25 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f497c3e2900 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 83)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f497bc6f7e0 __dso_handle>)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 9 8 11 2 (set (reg:DI 1 dx)
        (reg/f:DI 83)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f497bc6f7e0 __dso_handle>)
            (nil))))
(insn 11 9 12 2 (set (reg:DI 4 si)
        (reg/f:DI 82)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f497c1043f0 __ioinit>)
            (nil))))
(insn 12 11 14 2 (set (reg:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f497c3e2b00 __dt_comp >)
                    ] UNSPEC_GOTPCREL)) [26  S8 A8])) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (nil))
(insn 14 12 15 2 (set (reg:DI 5 di)
        (reg:DI 86)) "/usr/include/c++/11/iostream":74:25 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f497c3e2b00 __dt_comp >)
            (nil))))
(call_insn/j 15 14 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f497bca9500 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/11/iostream":74:25 828 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f497bca9500 __cxa_atexit>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Combiner totals: 64 attempts, 46 substitutions (22 requiring new space),
;; 3 successes.
