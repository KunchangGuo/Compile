digraph "a-fib.cpp.164t.ch_vect" {
overlap=false;
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	subgraph cluster_1812_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_1812_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:952547452\<bb\ 4\>:\l\
|#\ a_39\ =\ PHI\ \<b_42(12),\ 0(11)\>\l\
|#\ b_42\ =\ PHI\ \<b_13(12),\ 1(11)\>\l\
|#\ i_46\ =\ PHI\ \<i_16(12),\ 1(11)\>\l\
|b_13\ =\ a_39\ +\ b_42;\l\
|_15\ =\ std::basic_ostream\<char\>::operator\<\<\ (&cout,\ b_13);\l\
|_22\ =\ _15-\>_vptr.basic_ostream;\l\
|_23\ =\ MEM[(long\ int\ *)_22\ +\ -24B];\l\
|_24\ =\ (sizetype)\ _23;\l\
|_25\ =\ _15\ +\ _24;\l\
|_30\ =\ MEM[(const\ struct\ __ctype_type\ *\ *)_25\ +\ 240B];\l\
|if\ (_30\ ==\ 0B)\l\
\ \ goto\ \<bb\ 5\>;\ [0.04%]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [99.96%]\l\
}"];

	fn_1812_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:952166433\<bb\ 6\>:\l\
|_33\ =\ MEM[(const\ struct\ ctype\ *)_30]._M_widen_ok;\l\
|if\ (_33\ !=\ 0)\l\
\ \ goto\ \<bb\ 7\>;\ [51.12%]\l\
else\l\
\ \ goto\ \<bb\ 8\>;\ [48.88%]\l\
}"];

	fn_1812_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:486747484\<bb\ 7\>:\l\
|_36\ =\ MEM[(const\ struct\ ctype\ *)_30]._M_widen[10];\l\
|_4\ =\ (int)\ _36;\l\
goto\ \<bb\ 10\>;\ [100.00%]\l\
}"];

	fn_1812_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:465418949\<bb\ 8\>:\l\
|std::ctype\<char\>::_M_widen_init\ (_30);\l\
|_40\ =\ MEM[(const\ struct\ ctype\ *)_30].D.38127._vptr.facet;\l\
|_41\ =\ MEM[(int\ (*)\ ()\ *)_40\ +\ 48B];\l\
|PROF_45\ =\ [obj_type_ref]\ OBJ_TYPE_REF(_41;(const\ struct\ ctype)_30-\>6);\l\
|if\ (PROF_45\ ==\ do_widen)\l\
\ \ goto\ \<bb\ 10\>;\ [80.00%]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [20.00%]\l\
}"];

	fn_1812_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:952166435\<bb\ 10\>:\l\
|#\ prephitmp_2\ =\ PHI\ \<_4(7),\ 10(8),\ _3(9)\>\l\
|_28\ =\ std::basic_ostream\<char\>::put\ (_15,\ prephitmp_2);\l\
|std::basic_ostream\<char\>::flush\ (_28);\l\
|i_16\ =\ i_46\ +\ 1;\l\
|n.0_1\ =\ n;\l\
|if\ (n.0_1\ \>\ i_16)\l\
\ \ goto\ \<bb\ 12\>;\ [89.00%]\l\
else\l\
\ \ goto\ \<bb\ 3\>;\ [11.00%]\l\
}"];

	fn_1812_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:93083792\<bb\ 9\>:\l\
|_47\ =\ OBJ_TYPE_REF(_41;(const\ struct\ ctype)_30-\>6)\ (_30,\ 10);\l\
|_3\ =\ (int)\ _47;\l\
}"];

	fn_1812_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:847428128\<bb\ 12\>:\l\
goto\ \<bb\ 4\>;\ [100.00%]\l\
}"];

	}
	fn_1812_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_1812_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_1812_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:118111600\<bb\ 2\>:\l\
|std::basic_istream\<char\>::operator\>\>\ (&cin,\ &n);\l\
|std::__ostream_insert\<char,\ std::char_traits\<char\>\ \>\ (&cout,\ \"a=\",\ 2);\l\
|_9\ =\ std::basic_ostream\<char\>::operator\<\<\ (&cout,\ 0);\l\
|std::endl.isra\ (_9);\l\
|std::__ostream_insert\<char,\ std::char_traits\<char\>\ \>\ (&cout,\ \"X=\",\ 2);\l\
|_11\ =\ std::basic_ostream\<char\>::operator\<\<\ (&cout,\ 10);\l\
|std::endl.isra\ (_11);\l\
|n.0_32\ =\ n;\l\
|if\ (n.0_32\ \>\ 1)\l\
\ \ goto\ \<bb\ 11\>;\ [89.00%]\l\
else\l\
\ \ goto\ \<bb\ 3\>;\ [11.00%]\l\
}"];

	fn_1812_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:117730583\<bb\ 3\>:\l\
|n\ =\{v\}\ \{CLOBBER\};\l\
|return\ 0;\l\
}"];

	fn_1812_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:105119324\<bb\ 11\>:\l\
}"];

	fn_1812_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:381018\<bb\ 5\>:\l\
|std::__throw_bad_cast\ ();\l\
}"];

	fn_1812_basic_block_0:s -> fn_1812_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1812_basic_block_2:s -> fn_1812_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true,label="[89%]"];
	fn_1812_basic_block_2:s -> fn_1812_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true,label="[11%]"];
	fn_1812_basic_block_3:s -> fn_1812_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true,label="[100%]"];
	fn_1812_basic_block_11:s -> fn_1812_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1812_basic_block_4:s -> fn_1812_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true,label="[0%]"];
	fn_1812_basic_block_4:s -> fn_1812_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true,label="[99%]"];
	fn_1812_basic_block_6:s -> fn_1812_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true,label="[51%]"];
	fn_1812_basic_block_6:s -> fn_1812_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true,label="[48%]"];
	fn_1812_basic_block_7:s -> fn_1812_basic_block_10:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1812_basic_block_8:s -> fn_1812_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true,label="[80%]"];
	fn_1812_basic_block_8:s -> fn_1812_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true,label="[20%]"];
	fn_1812_basic_block_9:s -> fn_1812_basic_block_10:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_1812_basic_block_10:s -> fn_1812_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true,label="[89%]"];
	fn_1812_basic_block_10:s -> fn_1812_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true,label="[11%]"];
	fn_1812_basic_block_12:s -> fn_1812_basic_block_4:n [style="dotted,bold",color=blue,weight=10,constraint=false,label="[100%]"];
	fn_1812_basic_block_0:s -> fn_1812_basic_block_1:n [style="invis",constraint=true];
}
}
